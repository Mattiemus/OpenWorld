[{"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\index.tsx":"1","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\forwarding-signal.ts":"2","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\metadata.ts":"3","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\mathex.ts":"4","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\cframe.ts":"5","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector3.ts":"6","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\quaternion.ts":"7","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector2.ts":"8","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\uuid.ts":"9","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\classes\\data-model-class-metadata.ts":"10","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\data-model-property-metadata.ts":"11","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\utils\\get-element-size.ts":"12","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\mouse.ts":"13","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\client-replicator.ts":"14","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\world.ts":"15","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\run-service.ts":"16","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\network-replicator.ts":"17","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\data-model-service-base.ts":"18","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\service-base.ts":"19","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\world-impl.ts":"20","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\mouse-impl.ts":"21","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\run-service-impl.ts":"22","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\client-replicator-impl.ts":"23","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\camera.ts":"24","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\instance.ts":"25","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\datamodel.ts":"26","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\primitive.ts":"27","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\world-object.ts":"28","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\service-provider.ts":"29","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-mouse-impl.ts":"30","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-run-service-impl.ts":"31","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-client-replicator-impl.ts":"32","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\render-canvas.ts":"33","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-world-impl.ts":"34","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-lighting-impl.ts":"35","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\lighting-impl.ts":"36","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\color3.ts":"37","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\lighting.ts":"38","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\point-light.ts":"39","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\light.ts":"40","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\property-type.ts":"41","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Content.ts":"42","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\sky.ts":"43","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\content-provider-impl.ts":"44","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-content-provider.ts":"45","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\content-provider.ts":"46","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Material.ts":"47","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\material.ts":"48","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\content.ts":"49","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\converters\\cframe-converter.ts":"50","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\point-light-proxy.ts":"51","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\perspective-camera-proxy.ts":"52","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\sky-proxy.ts":"53","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\destroyable.ts":"54","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\objects\\dynamic-instanced-mesh.ts":"55","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\primitive-renderer.ts":"56","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\instance-context.ts":"57","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\contexts\\local-client-instance-context.ts":"58","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-serializer.ts":"59","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\type-guards.ts":"60","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-content-serializer.ts":"61","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-string-serializer.ts":"62","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-boolean-serializer.ts":"63","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-number-serializer.ts":"64","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-cframe-serializer.ts":"65","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-color3-serializer.ts":"66","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-vector3-serializer.ts":"67","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-quaternion-serializer.ts":"68","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-material-serializer.ts":"69","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\openworld-canvas.tsx":"70","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\inter-thread-communication.ts":"71","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\InstanceUtils.ts":"72","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\worker-thread.tsx":"73","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-run-service-impl-proxy.ts":"74","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-mouse-impl-proxy.ts":"75","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-property-serializer.ts":"76","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\DataModelUtils.ts":"77","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\client-script.ts":"78","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\base-script.ts":"79","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\worker-threads\\script-thread-worker.ts":"80","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\data-model-debugger.tsx":"81","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-icon.tsx":"82","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer.tsx":"83","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer-item.tsx":"84","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-label.tsx":"85","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\text-utils.ts":"86","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\hooks\\use-throttle.ts":"87","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\custom-form-inputs\\vector3-input.tsx":"88","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-property-editor.tsx":"89","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\folder.ts":"90","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\icons\\CutIcon.tsx":"91","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\icons\\CubeIcon.tsx":"92","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\icons\\OpenFolderIcon.tsx":"93"},{"size":11909,"mtime":1611791938515,"results":"94","hashOfConfig":"95"},{"size":767,"mtime":1609261336310,"results":"96","hashOfConfig":"95"},{"size":5426,"mtime":1611438318127,"results":"97","hashOfConfig":"95"},{"size":1909,"mtime":1611608830082,"results":"98","hashOfConfig":"95"},{"size":2021,"mtime":1611608126091,"results":"99","hashOfConfig":"95"},{"size":2553,"mtime":1611770261358,"results":"100","hashOfConfig":"95"},{"size":6024,"mtime":1611770387461,"results":"101","hashOfConfig":"95"},{"size":1193,"mtime":1609425774561,"results":"102","hashOfConfig":"95"},{"size":714,"mtime":1609497833127,"results":"103","hashOfConfig":"95"},{"size":1425,"mtime":1609261500809,"results":"104","hashOfConfig":"95"},{"size":894,"mtime":1609278448334,"results":"105","hashOfConfig":"95"},{"size":994,"mtime":1609601559194,"results":"106","hashOfConfig":"95"},{"size":6768,"mtime":1611767038594,"results":"107","hashOfConfig":"95"},{"size":1001,"mtime":1611435408273,"results":"108","hashOfConfig":"95"},{"size":1763,"mtime":1611252904125,"results":"109","hashOfConfig":"95"},{"size":2605,"mtime":1611435388343,"results":"110","hashOfConfig":"95"},{"size":368,"mtime":1611435396327,"results":"111","hashOfConfig":"95"},{"size":1424,"mtime":1609632784020,"results":"112","hashOfConfig":"95"},{"size":170,"mtime":1609632799529,"results":"113","hashOfConfig":"95"},{"size":308,"mtime":1609630624088,"results":"114","hashOfConfig":"95"},{"size":1169,"mtime":1611766840209,"results":"115","hashOfConfig":"95"},{"size":798,"mtime":1609630624088,"results":"116","hashOfConfig":"95"},{"size":353,"mtime":1609630566249,"results":"117","hashOfConfig":"95"},{"size":4027,"mtime":1611488914208,"results":"118","hashOfConfig":"95"},{"size":16657,"mtime":1611774965016,"results":"119","hashOfConfig":"95"},{"size":547,"mtime":1610145554446,"results":"120","hashOfConfig":"95"},{"size":3670,"mtime":1611252712842,"results":"121","hashOfConfig":"95"},{"size":2591,"mtime":1611503990183,"results":"122","hashOfConfig":"95"},{"size":835,"mtime":1610143987331,"results":"123","hashOfConfig":"95"},{"size":5767,"mtime":1611766799147,"results":"124","hashOfConfig":"95"},{"size":3085,"mtime":1609632512616,"results":"125","hashOfConfig":"95"},{"size":3065,"mtime":1609291597666,"results":"126","hashOfConfig":"95"},{"size":4541,"mtime":1609633095980,"results":"127","hashOfConfig":"95"},{"size":5562,"mtime":1610148240126,"results":"128","hashOfConfig":"95"},{"size":3674,"mtime":1611770670561,"results":"129","hashOfConfig":"95"},{"size":320,"mtime":1609630624084,"results":"130","hashOfConfig":"95"},{"size":5061,"mtime":1611770434436,"results":"131","hashOfConfig":"95"},{"size":1559,"mtime":1611252904125,"results":"132","hashOfConfig":"95"},{"size":1130,"mtime":1611252798914,"results":"133","hashOfConfig":"95"},{"size":2102,"mtime":1611252798912,"results":"134","hashOfConfig":"95"},{"size":3122,"mtime":1611686264483,"results":"135","hashOfConfig":"95"},{"size":432,"mtime":1609343857321,"results":"136","hashOfConfig":"95"},{"size":4154,"mtime":1611252798912,"results":"137","hashOfConfig":"95"},{"size":349,"mtime":1609630624085,"results":"138","hashOfConfig":"95"},{"size":2186,"mtime":1611674765154,"results":"139","hashOfConfig":"95"},{"size":968,"mtime":1611435437014,"results":"140","hashOfConfig":"95"},{"size":567,"mtime":1609343885039,"results":"141","hashOfConfig":"95"},{"size":2810,"mtime":1609590726825,"results":"142","hashOfConfig":"95"},{"size":799,"mtime":1610899300296,"results":"143","hashOfConfig":"95"},{"size":1717,"mtime":1609504955088,"results":"144","hashOfConfig":"95"},{"size":3519,"mtime":1611674806289,"results":"145","hashOfConfig":"95"},{"size":2796,"mtime":1611443468592,"results":"146","hashOfConfig":"95"},{"size":8715,"mtime":1609436829902,"results":"147","hashOfConfig":"95"},{"size":635,"mtime":1609632818542,"results":"148","hashOfConfig":"95"},{"size":6224,"mtime":1609547953818,"results":"149","hashOfConfig":"95"},{"size":10976,"mtime":1611446217849,"results":"150","hashOfConfig":"95"},{"size":5345,"mtime":1610226968057,"results":"151","hashOfConfig":"95"},{"size":3375,"mtime":1609882877348,"results":"152","hashOfConfig":"95"},{"size":11767,"mtime":1610229645691,"results":"153","hashOfConfig":"95"},{"size":2875,"mtime":1611404659863,"results":"154","hashOfConfig":"95"},{"size":1031,"mtime":1610147944364,"results":"155","hashOfConfig":"95"},{"size":746,"mtime":1609883138525,"results":"156","hashOfConfig":"95"},{"size":757,"mtime":1609883344093,"results":"157","hashOfConfig":"95"},{"size":746,"mtime":1609883128999,"results":"158","hashOfConfig":"95"},{"size":1145,"mtime":1609782424479,"results":"159","hashOfConfig":"95"},{"size":988,"mtime":1609782224131,"results":"160","hashOfConfig":"95"},{"size":1002,"mtime":1609782152849,"results":"161","hashOfConfig":"95"},{"size":1082,"mtime":1609782332444,"results":"162","hashOfConfig":"95"},{"size":3835,"mtime":1609611156112,"results":"163","hashOfConfig":"95"},{"size":605,"mtime":1611766533059,"results":"164","hashOfConfig":"95"},{"size":6510,"mtime":1610222213954,"results":"165","hashOfConfig":"95"},{"size":1501,"mtime":1611489490402,"results":"166","hashOfConfig":"95"},{"size":8514,"mtime":1611332891693,"results":"167","hashOfConfig":"95"},{"size":2401,"mtime":1610227688710,"results":"168","hashOfConfig":"95"},{"size":3072,"mtime":1610227477573,"results":"169","hashOfConfig":"95"},{"size":8910,"mtime":1610230282495,"results":"170","hashOfConfig":"95"},{"size":2038,"mtime":1611763591710,"results":"171","hashOfConfig":"95"},{"size":529,"mtime":1611255640016,"results":"172","hashOfConfig":"95"},{"size":1615,"mtime":1611444788369,"results":"173","hashOfConfig":"95"},{"size":524,"mtime":1611335598022,"results":"174","hashOfConfig":"95"},{"size":4129,"mtime":1611790629929,"results":"175","hashOfConfig":"95"},{"size":3144,"mtime":1611768312614,"results":"176","hashOfConfig":"95"},{"size":8634,"mtime":1611789363977,"results":"177","hashOfConfig":"95"},{"size":2759,"mtime":1611776786239,"results":"178","hashOfConfig":"95"},{"size":2949,"mtime":1611774576136,"results":"179","hashOfConfig":"95"},{"size":193,"mtime":1611443911941,"results":"180","hashOfConfig":"95"},{"size":672,"mtime":1611618261274,"results":"181","hashOfConfig":"95"},{"size":2565,"mtime":1611768824814,"results":"182","hashOfConfig":"95"},{"size":15094,"mtime":1611777631741,"results":"183","hashOfConfig":"95"},{"size":512,"mtime":1611763591338,"results":"184","hashOfConfig":"95"},{"size":680,"mtime":1611763992459,"results":"185","hashOfConfig":"95"},{"size":963,"mtime":1611764056578,"results":"186","hashOfConfig":"95"},{"size":861,"mtime":1611764219597,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lmohov",{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"192"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"192"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"192"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"192"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\index.tsx",["381","382","383","384","385"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\forwarding-signal.ts",[],["386","387"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\mathex.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\cframe.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector3.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\quaternion.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector2.ts",[],["388","389"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\uuid.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\classes\\data-model-class-metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\data-model-property-metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\utils\\get-element-size.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\mouse.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\client-replicator.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\world.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\run-service.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\network-replicator.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\data-model-service-base.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\service-base.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\world-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\mouse-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\run-service-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\client-replicator-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\camera.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\instance.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\datamodel.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\primitive.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\world-object.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\service-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-mouse-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-run-service-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-client-replicator-impl.ts",[],["390","391"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\render-canvas.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-world-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-lighting-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\lighting-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\color3.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\lighting.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\point-light.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\light.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\property-type.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Content.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\sky.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\content-provider-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-content-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\content-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Material.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\material.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\content.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\converters\\cframe-converter.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\point-light-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\perspective-camera-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\sky-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\destroyable.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\objects\\dynamic-instanced-mesh.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\primitive-renderer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\instance-context.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\contexts\\local-client-instance-context.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\type-guards.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-content-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-string-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-boolean-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-number-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-cframe-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-color3-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-vector3-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-quaternion-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-material-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\openworld-canvas.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\inter-thread-communication.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\InstanceUtils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\worker-thread.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-run-service-impl-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-mouse-impl-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-property-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\DataModelUtils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\client-script.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\base-script.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\worker-threads\\script-thread-worker.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\data-model-debugger.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer.tsx",["392","393"],"import ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Instance from '../../../engine/datamodel/elements/instance';\r\nimport InstanceExplorerItem from './instance-explorer-item';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TreeView, { TreeViewProps } from '@material-ui/lab/TreeView';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { isString } from '../../../engine/utils/type-guards';\r\nimport { Menu, MenuItem, ListItemIcon, ListItemText, SvgIcon, Grid, TextField, InputAdornment, IconButton } from '@material-ui/core';\r\nimport CutIcon from '../icons/CutIcon';\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties;\r\n    instance: Instance;\r\n    multiSelect?: boolean;\r\n    showEditorHiddenInstances?: boolean;\r\n    onInstanceSelect?: (event: React.ChangeEvent<{}>, instances: Instance | Instance[]) => void;\r\n};\r\n\r\nexport default function InstanceExplorer(props: Props) {\r\n    const { \r\n        style, \r\n        instance, \r\n        multiSelect, \r\n        showEditorHiddenInstances, \r\n        onInstanceSelect\r\n    } = props;\r\n\r\n    const [ selectedInstances, setSelectedInstances ] = useState<Instance[]>([]);\r\n\r\n    const [ contextMenuMouseState, setContextMenuMouseState ] =\r\n        React.useState<{ mouseX: number | null, mouseY: number | null }>({ mouseX: null, mouseY: null });\r\n\r\n    const onExplorerItemContextMenu = (event: React.MouseEvent<HTMLLIElement, MouseEvent>, instance: Instance) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (selectedInstances.findIndex(i => i === instance) === -1) {\r\n            setSelectedInstances([ instance ]);\r\n        }\r\n\r\n        setContextMenuMouseState({\r\n            mouseX: event.clientX - 2,\r\n            mouseY: event.clientY - 4,\r\n        });\r\n    };\r\n  \r\n    const closeExplorerItemContextMenu = () => {\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n  \r\n    const onExplorerItemDuplicateClick = () => {\r\n        const clonedInstances: Instance[] = [];\r\n        for (const instance of selectedInstances) {\r\n            const clonedInstance = instance.clone();\r\n            clonedInstance.parent = instance.parent;\r\n\r\n            if (!clonedInstance.name.endsWith('Clone')) {\r\n                clonedInstance.name += ' Clone';\r\n            }\r\n\r\n            clonedInstances.push(clonedInstance);\r\n        }\r\n        \r\n        setSelectedInstances([ ...selectedInstances, ...clonedInstances ]);\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n  \r\n    const onExplorerItemDeleteClick = () => {\r\n        for (const instance of selectedInstances) {\r\n            instance.destroy();\r\n        }\r\n        \r\n        setSelectedInstances([]);\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n\r\n    const onNodeSelect = (event: React.ChangeEvent<{}>, nodeIds: string | string[]) => {\r\n        if (onInstanceSelect === undefined) {\r\n            return;\r\n        }\r\n\r\n        const context = instance['_context'];\r\n\r\n        if (isString(nodeIds)) {\r\n            const selectedInstance = context.findInstance(nodeIds);\r\n            if (selectedInstance !== undefined) { \r\n                setSelectedInstances([ selectedInstance ]);               \r\n                onInstanceSelect(event, selectedInstance);\r\n            } else {                \r\n                setSelectedInstances([]);  \r\n                onInstanceSelect(event, []);\r\n            }\r\n        } else {\r\n            const selectedInstances =\r\n                nodeIds\r\n                    .map(i => context.findInstance(i))\r\n                    .filter(i => i !== undefined) as Instance[];\r\n\r\n            setSelectedInstances(selectedInstances);  \r\n            onInstanceSelect(event, selectedInstances);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>   \r\n                    <TextField\r\n                        label=\"Search\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <DeleteIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <TreeView \r\n                style={style}\r\n                multiSelect={multiSelect as any}\r\n                defaultExpanded={[ instance['_refId'] ]}\r\n                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                defaultExpandIcon={<ChevronRightIcon />}\r\n                selected={selectedInstances.map(i => i['_refId'])}\r\n                onNodeSelect={onNodeSelect}\r\n            >\r\n                <InstanceExplorerItem \r\n                    onContextMenu={onExplorerItemContextMenu}\r\n                    showEditorHiddenInstances={showEditorHiddenInstances}\r\n                    instance={instance} />\r\n                \r\n                <Menu\r\n                    keepMounted\r\n                    open={contextMenuMouseState.mouseY !== null}\r\n                    onClose={closeExplorerItemContextMenu}\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={\r\n                        contextMenuMouseState.mouseY !== null && contextMenuMouseState.mouseX !== null\r\n                            ? { top: contextMenuMouseState.mouseY, left: contextMenuMouseState.mouseX }\r\n                            : undefined\r\n                    }\r\n                >\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <CutIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Cut\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <FileCopyIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Copy\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <AssignmentIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Paste\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <SvgIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Paste Into\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense onClick={onExplorerItemDuplicateClick}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <FileCopyIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Duplicate\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Delete\" />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </TreeView>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer-item.tsx",["394"],"import Instance from '../../../engine/datamodel/elements/instance';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getMetaData } from '../../../engine/datamodel/internals/metadata/metadata';\r\nimport InstanceLabel from './instance-label';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    label: {\r\n      fontWeight: 'inherit',\r\n      color: 'inherit',\r\n      padding: theme.spacing(0.5, 0)\r\n    }\r\n}));\r\n\r\ntype Props = {\r\n    instance: Instance;\r\n    onContextMenu?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>, instance: Instance) => void\r\n};\r\n\r\nfunction createChildExplorerItems(props: Props) {\r\n    const { instance, ...otherProps } = props;\r\n\r\n    return instance.getChildren().map(inst => {\r\n        const metadata = getMetaData(inst);\r\n        if (metadata.hasAttribute('EditorHidden')) {\r\n            return null;\r\n        }\r\n\r\n        return (<InstanceExplorerItem {...otherProps} key={inst['_refId']} instance={inst} />);\r\n    });\r\n};\r\n\r\nexport default function InstanceExplorerItem(props: Props) {\r\n    const { instance, onContextMenu, ...otherProps } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ childExplorerItems, setChildExplorerItems ] = useState(createChildExplorerItems(props));\r\n    useEffect(() => setChildExplorerItems(createChildExplorerItems(props)), [ props ]);\r\n\r\n    useEffect(() => {\r\n        const instanceChildAddedConnection =\r\n            instance.childAdded.connect(() => {\r\n                setChildExplorerItems(createChildExplorerItems(props));\r\n            });\r\n\r\n        const instanceChildRemovedConnection =\r\n            instance.childRemoved.connect(() => {\r\n                setChildExplorerItems(createChildExplorerItems(props));\r\n            });\r\n\r\n        return () => {\r\n            instanceChildAddedConnection.disconnect();\r\n            instanceChildRemovedConnection.disconnect();\r\n        };\r\n    }, [ instance ]);\r\n\r\n    return (\r\n        <TreeItem\r\n            {...otherProps}\r\n            onContextMenu={onContextMenu === undefined ? undefined : (e) => onContextMenu(e, instance)}\r\n            nodeId={instance['_refId']}\r\n            key={instance['_refId']}\r\n            label={<InstanceLabel instance={instance} />}\r\n            classes={{\r\n                label: classes.label\r\n            }}\r\n        >\r\n            { childExplorerItems }\r\n        </TreeItem>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-label.tsx",["395"],"import Instance from '../../../engine/datamodel/elements/instance';\r\nimport InstanceIcon from './instance-icon';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    labelRoot: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(0.5)\r\n    },\r\n    labelText: {\r\n      fontWeight: 'inherit',\r\n      flexGrow: 1\r\n    },\r\n    labelNullText: {\r\n      fontWeight: 'lighter',\r\n      flexGrow: 1\r\n    }\r\n}));\r\n\r\ntype Props = {\r\n    instance: Instance | null\r\n} & Partial<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;\r\n\r\nexport default function InstanceLabel(props: Props) {\r\n    const { instance, ...otherProps } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ instanceName, setInstanceName ] = useState(instance === null ? null : instance.name);\r\n    useEffect(() => setInstanceName(instance === null ? null : instance.name), [ instance ]);\r\n\r\n    useEffect(() => {\r\n        if (instance != null) {\r\n            const instanceNameChangedSignal = instance.getPropertyChangedSignal('name')!;\r\n            const instanceNameChangedConnection =\r\n                instanceNameChangedSignal.connect(() => {\r\n                    setInstanceName(instance.name);\r\n                });\r\n\r\n            return () => {\r\n                instanceNameChangedConnection.disconnect();\r\n            };\r\n        }\r\n    }, [ instance ]);\r\n\r\n    if (instance === null) {\r\n        return (\r\n            <div \r\n                {...otherProps}\r\n                className={classes.labelRoot}\r\n            >    \r\n                <Typography \r\n                    className={classes.labelNullText}\r\n                    variant='body2'                \r\n                >\r\n                    null\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            {...otherProps}\r\n            className={classes.labelRoot}\r\n        >\r\n            <InstanceIcon\r\n                className={classes.labelIcon}\r\n                instance={instance}\r\n            />\r\n\r\n            <Typography \r\n                className={classes.labelText}\r\n                variant='body2'                \r\n            >\r\n                {instanceName}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\text-utils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\hooks\\use-throttle.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\custom-form-inputs\\vector3-input.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-property-editor.tsx",["396","397","398","399","400","401","402","403","404","405","406"],"import Color3 from '../../../engine/math/color3';\r\nimport Content from '../../../engine/datamodel/data-types/content';\r\nimport DataModelPropertyMetaData from '../../../engine/datamodel/internals/metadata/properties/data-model-property-metadata';\r\nimport Instance from '../../../engine/datamodel/elements/instance';\r\nimport InstanceLabel from './instance-label';\r\nimport InstanceUtils from '../../../engine/datamodel/utils/InstanceUtils';\r\nimport MathEx from '../../../engine/math/mathex';\r\nimport PropertyType from '../../../engine/datamodel/internals/metadata/properties/property-type';\r\nimport Quaternion from '../../../engine/math/quaternion';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState\r\n    } from 'react';\r\nimport useThrottle from '../hooks/use-throttle';\r\nimport Vector3 from '../../../engine/math/vector3';\r\nimport Vector3Input from './custom-form-inputs/vector3-input';\r\nimport { getMetaData } from '../../../engine/datamodel/internals/metadata/metadata';\r\nimport {\r\n    Button,\r\n    Input,\r\n    MenuItem,\r\n    Select,\r\n    Switch,\r\n    TextField,\r\n    IconButton,\r\n    makeStyles,\r\n    } from '@material-ui/core';\r\n\r\nexport type PropertyEditorProps = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n};\r\n\r\ntype PropertyEditorRenderProps<T> = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n    propertyMetadata: DataModelPropertyMetaData;\r\n    value: T;\r\n    setValue: (newValue: T) => void;\r\n    throttledValue: T;\r\n    hasFocus: boolean,\r\n    setHasFocus: React.Dispatch<React.SetStateAction<boolean>>\r\n};\r\n\r\nfunction createInstancePropertyEditor<T>(render: (renderProps: PropertyEditorRenderProps<T>) => JSX.Element | null) {\r\n    return (props: PropertyEditorProps) => {\r\n        const { instance, propertyName } = props;\r\n\r\n        const propertyMetadata = useMemo(() => {\r\n            const metadata = getMetaData(instance);\r\n            const propMetadata = metadata.properties.get(propertyName);\r\n            if (propMetadata === undefined) {\r\n                throw new Error(`Cannot create property editor for property \"${propertyName}\" as it does not exist on parent instance \"${instance['_refId']}\"`);\r\n            }\r\n            return propMetadata;\r\n        }, [ instance, propertyName ]);\r\n    \r\n        const [ value, _setValue ] = useState<T>(InstanceUtils.unsafeGetProperty(instance, propertyName));    \r\n        const throttledValue = useThrottle(value, 150);\r\n    \r\n        useEffect(() => {\r\n            _setValue(InstanceUtils.unsafeGetProperty(instance, propertyName));\r\n\r\n            const propertyChangedSignal = instance.getPropertyChangedSignal(propertyName)!;\r\n            const propertyChangedConnection = propertyChangedSignal.connect(() => {\r\n                _setValue(InstanceUtils.unsafeGetProperty(instance, propertyName));\r\n            });\r\n    \r\n            return () => {\r\n                propertyChangedConnection.disconnect();\r\n            }\r\n        }, [ instance, propertyName ]);\r\n        \r\n        const [ hasFocus, setHasFocus ] = useState(false);\r\n    \r\n        const setValue = (newValue: T) => {\r\n            if (!propertyMetadata.hasAttribute('ReadOnly')) {\r\n                InstanceUtils.unsafeSetProperty(instance, propertyName, newValue);\r\n            }\r\n        };\r\n\r\n        return render({\r\n            instance,\r\n            propertyName,\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        });\r\n    };\r\n}\r\n\r\n//\r\n// Number Editor\r\n//\r\n\r\nexport const InstanceNumberPropertyEditor =\r\n    createInstancePropertyEditor<number>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Input\r\n                type='number'\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => {\r\n                    const newValue = Number.parseFloat(e.target.value);\r\n                    if (!Number.isNaN(newValue)) {\r\n                        setValue(newValue);\r\n                    }\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Boolean Editor\r\n//\r\n\r\nexport const InstanceBooleanPropertyEditor =\r\n    createInstancePropertyEditor<boolean>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Switch\r\n                size='small'\r\n                color='primary'\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                checked={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.checked)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// String Editor\r\n//\r\n\r\nexport const InstanceStringPropertyEditor =\r\n    createInstancePropertyEditor<string>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Color3 Editor\r\n//\r\n\r\nexport const InstanceColor3PropertyEditor =\r\n    createInstancePropertyEditor<Color3>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Input\r\n                type='color'\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value.toHex() : throttledValue.toHex()}\r\n                onChange={(e) => {\r\n                    const newColor = Color3.fromHex(e.target.value);\r\n                    if (newColor !== undefined) {\r\n                        setValue(newColor);\r\n                    }\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Vector3 Editor\r\n//\r\n\r\nexport const InstanceVector3PropertyEditor =\r\n    createInstancePropertyEditor<Vector3>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        // TODO: Add focus handling!\r\n\r\n        return (\r\n            <Vector3Input\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={throttledValue}\r\n                onChange={setValue}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Quaternion Editor\r\n//\r\n\r\nexport const InstanceQuaternionPropertyEditor =\r\n    createInstancePropertyEditor<Quaternion>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        // TODO: Add focus handling!\r\n\r\n        return (\r\n            <Vector3Input\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={Vector3.multiplyScalar(throttledValue.toEulerAngles(), MathEx.rad2deg)}\r\n                onChange={v => {\r\n                    const newValue = Quaternion.fromEulerAngles(\r\n                        v.x * MathEx.deg2rad,\r\n                        v.y * MathEx.deg2rad,\r\n                        v.z * MathEx.deg2rad\r\n                    );\r\n                    setValue(newValue);\r\n                }}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Content Editor\r\n//\r\n\r\nexport const InstanceContentPropertyEditor =\r\n    createInstancePropertyEditor<Content>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value.toString() : throttledValue.toString()}\r\n                onChange={(e) => {\r\n                    const newValue = new Content(e.target.value);\r\n                    setValue(newValue);\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Enum Editor\r\n//\r\n\r\nexport const InstanceEnumPropertyEditor =\r\n    createInstancePropertyEditor<string>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Select\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.value as string)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            >\r\n                {\r\n                    Object.keys(propertyMetadata.type.enumValue!).map(enumKey => {\r\n                        return (\r\n                            <MenuItem key={enumKey} value={enumKey}>\r\n                                {propertyMetadata.type.enumValue![enumKey]}\r\n                            </MenuItem>\r\n                        );\r\n                    })                    \r\n                }\r\n            </Select>\r\n        );\r\n    });\r\n\r\n//\r\n// InstanceRef Editor\r\n//\r\n\r\nconst useInstanceRefPropertyEditorStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    instanceEditor: {\r\n        flexGrow: 1,\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport const InstanceInstanceRefPropertyEditor =\r\n    createInstancePropertyEditor<Instance | null>((renderProps) => {\r\n        const {\r\n            instance,\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        const classes = useInstanceRefPropertyEditorStyles();\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.instanceEditor}>\r\n                    <InstanceLabel instance={value} />\r\n                </div>\r\n        \r\n                <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => setValue(null)}\r\n                >\r\n                    <ClearIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    });    \r\n\r\n//\r\n// General Property Editor\r\n//\r\n\r\nexport type InstancePropertyEditorProps = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n};\r\n\r\nexport default function InstancePropertyEditor(props: InstancePropertyEditorProps) {\r\n    const { instance, propertyName } = props;\r\n\r\n    const propertyMetadata = useMemo(() => {\r\n        const metadata = getMetaData(instance);\r\n        const propMetadata = metadata.properties.get(propertyName);\r\n        if (propMetadata === undefined) {\r\n            throw new Error(`Cannot create property editor for property \"${propertyName}\" as it does not exist on parent instance \"${instance['_refId']}\"`);\r\n        }\r\n        return propMetadata;\r\n    }, [ instance, propertyName ]);\r\n    \r\n    if (propertyMetadata.type === PropertyType.number) {\r\n        return (\r\n            <InstanceNumberPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.boolean) {\r\n        return (\r\n            <InstanceBooleanPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.string) {\r\n        return (\r\n            <InstanceStringPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.color3) {\r\n        return (\r\n            <InstanceColor3PropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.vector3) {\r\n        return (\r\n            <InstanceVector3PropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.quaternion) {\r\n        return (\r\n            <InstanceQuaternionPropertyEditor \r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.content) {\r\n        return (\r\n            <InstanceContentPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    // TODO\r\n    if (propertyMetadata.type === PropertyType.material) {\r\n        return (\r\n            <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                style={{ textTransform: 'none' }}\r\n            >\r\n                Material\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type.isEnum) {\r\n        return (\r\n            <InstanceEnumPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />     \r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type.isInstanceRef) {\r\n        return (\r\n            <InstanceInstanceRefPropertyEditor             \r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />            \r\n        );\r\n    }\r\n\r\n    return null;\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\folder.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\icons\\CutIcon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\icons\\CubeIcon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\icons\\OpenFolderIcon.tsx",[],{"ruleId":"407","severity":1,"message":"408","line":27,"column":78,"nodeType":"409","messageId":"410","endLine":27,"endColumn":90},{"ruleId":"407","severity":1,"message":"411","line":27,"column":92,"nodeType":"409","messageId":"410","endLine":27,"endColumn":104},{"ruleId":"407","severity":1,"message":"412","line":27,"column":106,"nodeType":"409","messageId":"410","endLine":27,"endColumn":112},{"ruleId":"407","severity":1,"message":"413","line":27,"column":114,"nodeType":"409","messageId":"410","endLine":27,"endColumn":122},{"ruleId":"407","severity":1,"message":"414","line":35,"column":11,"nodeType":"409","messageId":"410","endLine":35,"endColumn":17},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","replacedBy":"418"},{"ruleId":"415","replacedBy":"419"},{"ruleId":"417","replacedBy":"420"},{"ruleId":"415","replacedBy":"421"},{"ruleId":"417","replacedBy":"422"},{"ruleId":"407","severity":1,"message":"423","line":5,"column":27,"nodeType":"409","messageId":"410","endLine":5,"endColumn":36},{"ruleId":"407","severity":1,"message":"424","line":6,"column":20,"nodeType":"409","messageId":"410","endLine":6,"endColumn":33},{"ruleId":"425","severity":1,"message":"426","line":56,"column":8,"nodeType":"427","endLine":56,"endColumn":20,"suggestions":"428"},{"ruleId":"407","severity":1,"message":"429","line":35,"column":13,"nodeType":"409","messageId":"410","endLine":35,"endColumn":27},{"ruleId":"407","severity":1,"message":"430","line":226,"column":13,"nodeType":"409","messageId":"410","endLine":226,"endColumn":18},{"ruleId":"407","severity":1,"message":"431","line":229,"column":13,"nodeType":"409","messageId":"410","endLine":229,"endColumn":21},{"ruleId":"407","severity":1,"message":"432","line":230,"column":13,"nodeType":"409","messageId":"410","endLine":230,"endColumn":24},{"ruleId":"407","severity":1,"message":"430","line":252,"column":13,"nodeType":"409","messageId":"410","endLine":252,"endColumn":18},{"ruleId":"407","severity":1,"message":"431","line":255,"column":13,"nodeType":"409","messageId":"410","endLine":255,"endColumn":21},{"ruleId":"407","severity":1,"message":"432","line":256,"column":13,"nodeType":"409","messageId":"410","endLine":256,"endColumn":24},{"ruleId":"407","severity":1,"message":"433","line":362,"column":13,"nodeType":"409","messageId":"410","endLine":362,"endColumn":21},{"ruleId":"407","severity":1,"message":"434","line":363,"column":13,"nodeType":"409","messageId":"410","endLine":363,"endColumn":29},{"ruleId":"407","severity":1,"message":"435","line":366,"column":13,"nodeType":"409","messageId":"410","endLine":366,"endColumn":27},{"ruleId":"407","severity":1,"message":"431","line":367,"column":13,"nodeType":"409","messageId":"410","endLine":367,"endColumn":21},{"ruleId":"407","severity":1,"message":"432","line":368,"column":13,"nodeType":"409","messageId":"410","endLine":368,"endColumn":24},"@typescript-eslint/no-unused-vars","'ListItemIcon' is defined but never used.","Identifier","unusedVar","'ListItemText' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'worker' is assigned a value but never used.","no-native-reassign",["436"],"no-negated-in-lhs",["437"],["436"],["437"],["436"],["437"],"'useEffect' is defined but never used.","'TreeViewProps' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. If 'setChildExplorerItems' needs the current value of 'props', you can also switch to useReducer instead of useState and read 'props' in the reducer.","ArrayExpression",["438"],"'collectedProps' is assigned a value but never used.","'value' is assigned a value but never used.","'hasFocus' is assigned a value but never used.","'setHasFocus' is assigned a value but never used.","'instance' is assigned a value but never used.","'propertyMetadata' is assigned a value but never used.","'throttledValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"439","fix":"440"},"Update the dependencies array to be: [instance, props]",{"range":"441","text":"442"},[1953,1965],"[instance, props]"]