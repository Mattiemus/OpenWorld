[{"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\index.tsx":"1","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\forwarding-signal.ts":"2","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\metadata.ts":"3","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\mathex.ts":"4","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\cframe.ts":"5","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector3.ts":"6","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\quaternion.ts":"7","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector2.ts":"8","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\uuid.ts":"9","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\classes\\data-model-class-metadata.ts":"10","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\data-model-property-metadata.ts":"11","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\utils\\get-element-size.ts":"12","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\mouse.ts":"13","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\client-replicator.ts":"14","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\world.ts":"15","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\run-service.ts":"16","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\network-replicator.ts":"17","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\data-model-service-base.ts":"18","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\service-base.ts":"19","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\world-impl.ts":"20","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\mouse-impl.ts":"21","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\run-service-impl.ts":"22","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\client-replicator-impl.ts":"23","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\camera.ts":"24","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\instance.ts":"25","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\datamodel.ts":"26","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\primitive.ts":"27","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\world-object.ts":"28","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\service-provider.ts":"29","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-mouse-impl.ts":"30","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-run-service-impl.ts":"31","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-client-replicator-impl.ts":"32","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\render-canvas.ts":"33","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-world-impl.ts":"34","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-lighting-impl.ts":"35","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\lighting-impl.ts":"36","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\color3.ts":"37","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\lighting.ts":"38","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\point-light.ts":"39","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\light.ts":"40","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\property-type.ts":"41","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Content.ts":"42","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\sky.ts":"43","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\content-provider-impl.ts":"44","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-content-provider.ts":"45","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\content-provider.ts":"46","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Material.ts":"47","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\material.ts":"48","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\content.ts":"49","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\converters\\cframe-converter.ts":"50","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\point-light-proxy.ts":"51","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\perspective-camera-proxy.ts":"52","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\sky-proxy.ts":"53","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\destroyable.ts":"54","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\objects\\dynamic-instanced-mesh.ts":"55","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\primitive-renderer.ts":"56","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\instance-context.ts":"57","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\contexts\\local-client-instance-context.ts":"58","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-serializer.ts":"59","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\type-guards.ts":"60","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-content-serializer.ts":"61","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-string-serializer.ts":"62","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-boolean-serializer.ts":"63","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-number-serializer.ts":"64","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-cframe-serializer.ts":"65","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-color3-serializer.ts":"66","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-vector3-serializer.ts":"67","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-quaternion-serializer.ts":"68","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-material-serializer.ts":"69","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\openworld-canvas.tsx":"70","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\inter-thread-communication.ts":"71","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\InstanceUtils.ts":"72","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\worker-thread.tsx":"73","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-run-service-impl-proxy.ts":"74","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-mouse-impl-proxy.ts":"75","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-property-serializer.ts":"76","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\DataModelUtils.ts":"77","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\client-script.ts":"78","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\base-script.ts":"79","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\data-model-debugger.tsx":"80","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-icon.tsx":"81","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer.tsx":"82","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer-item.tsx":"83","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-label.tsx":"84","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\text-utils.ts":"85","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-property-editor.tsx":"86","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\folder.ts":"87","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\open-world-editor.tsx":"88","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\contexts\\editor-context.ts":"89","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\services\\editor-service-container.ts":"90","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\services\\data-services\\project-data-service.ts":"91","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-app-bar.tsx":"92","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-body.tsx":"93","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\inputs\\vector3-input.tsx":"94","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\services\\data-services\\account-data-service.ts":"95","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-observable.ts":"96","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\project-editor.tsx":"97","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-instance-ref-serializer.ts":"98","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-context-serializer.ts":"99","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\testdata.ts":"100","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\worker-threads\\client-script-thread-worker.ts":"101","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-throttle.ts":"102","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\open-folder-icon.tsx":"103","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cut-icon.tsx":"104","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cube-icon.tsx":"105"},{"size":859,"mtime":1611874998310,"results":"106","hashOfConfig":"107"},{"size":767,"mtime":1609261336310,"results":"108","hashOfConfig":"107"},{"size":5426,"mtime":1611438318127,"results":"109","hashOfConfig":"107"},{"size":1909,"mtime":1611608830082,"results":"110","hashOfConfig":"107"},{"size":2021,"mtime":1611608126091,"results":"111","hashOfConfig":"107"},{"size":2553,"mtime":1611770261358,"results":"112","hashOfConfig":"107"},{"size":6024,"mtime":1611770387461,"results":"113","hashOfConfig":"107"},{"size":1193,"mtime":1609425774561,"results":"114","hashOfConfig":"107"},{"size":714,"mtime":1609497833127,"results":"115","hashOfConfig":"107"},{"size":1425,"mtime":1609261500809,"results":"116","hashOfConfig":"107"},{"size":894,"mtime":1609278448334,"results":"117","hashOfConfig":"107"},{"size":994,"mtime":1609601559194,"results":"118","hashOfConfig":"107"},{"size":6768,"mtime":1611767038594,"results":"119","hashOfConfig":"107"},{"size":1001,"mtime":1611435408273,"results":"120","hashOfConfig":"107"},{"size":1763,"mtime":1611252904125,"results":"121","hashOfConfig":"107"},{"size":2605,"mtime":1611435388343,"results":"122","hashOfConfig":"107"},{"size":368,"mtime":1611435396327,"results":"123","hashOfConfig":"107"},{"size":1424,"mtime":1609632784020,"results":"124","hashOfConfig":"107"},{"size":170,"mtime":1609632799529,"results":"125","hashOfConfig":"107"},{"size":308,"mtime":1609630624088,"results":"126","hashOfConfig":"107"},{"size":1169,"mtime":1611766840209,"results":"127","hashOfConfig":"107"},{"size":798,"mtime":1609630624088,"results":"128","hashOfConfig":"107"},{"size":353,"mtime":1609630566249,"results":"129","hashOfConfig":"107"},{"size":4027,"mtime":1611488914208,"results":"130","hashOfConfig":"107"},{"size":16657,"mtime":1611774965016,"results":"131","hashOfConfig":"107"},{"size":547,"mtime":1610145554446,"results":"132","hashOfConfig":"107"},{"size":3670,"mtime":1611252712842,"results":"133","hashOfConfig":"107"},{"size":2591,"mtime":1611503990183,"results":"134","hashOfConfig":"107"},{"size":835,"mtime":1610143987331,"results":"135","hashOfConfig":"107"},{"size":5767,"mtime":1611766799147,"results":"136","hashOfConfig":"107"},{"size":3085,"mtime":1609632512616,"results":"137","hashOfConfig":"107"},{"size":3065,"mtime":1609291597666,"results":"138","hashOfConfig":"107"},{"size":4541,"mtime":1609633095980,"results":"139","hashOfConfig":"107"},{"size":5562,"mtime":1610148240126,"results":"140","hashOfConfig":"107"},{"size":3674,"mtime":1611770670561,"results":"141","hashOfConfig":"107"},{"size":320,"mtime":1609630624084,"results":"142","hashOfConfig":"107"},{"size":5061,"mtime":1611770434436,"results":"143","hashOfConfig":"107"},{"size":1559,"mtime":1611252904125,"results":"144","hashOfConfig":"107"},{"size":1130,"mtime":1611252798914,"results":"145","hashOfConfig":"107"},{"size":2102,"mtime":1611252798912,"results":"146","hashOfConfig":"107"},{"size":3122,"mtime":1611686264483,"results":"147","hashOfConfig":"107"},{"size":432,"mtime":1609343857321,"results":"148","hashOfConfig":"107"},{"size":4154,"mtime":1611252798912,"results":"149","hashOfConfig":"107"},{"size":349,"mtime":1609630624085,"results":"150","hashOfConfig":"107"},{"size":2186,"mtime":1611674765154,"results":"151","hashOfConfig":"107"},{"size":968,"mtime":1611435437014,"results":"152","hashOfConfig":"107"},{"size":567,"mtime":1609343885039,"results":"153","hashOfConfig":"107"},{"size":2810,"mtime":1609590726825,"results":"154","hashOfConfig":"107"},{"size":799,"mtime":1610899300296,"results":"155","hashOfConfig":"107"},{"size":1717,"mtime":1609504955088,"results":"156","hashOfConfig":"107"},{"size":3519,"mtime":1611674806289,"results":"157","hashOfConfig":"107"},{"size":2796,"mtime":1611443468592,"results":"158","hashOfConfig":"107"},{"size":8715,"mtime":1609436829902,"results":"159","hashOfConfig":"107"},{"size":635,"mtime":1609632818542,"results":"160","hashOfConfig":"107"},{"size":6224,"mtime":1609547953818,"results":"161","hashOfConfig":"107"},{"size":10976,"mtime":1611446217849,"results":"162","hashOfConfig":"107"},{"size":6067,"mtime":1611875944904,"results":"163","hashOfConfig":"107"},{"size":3929,"mtime":1611875479202,"results":"164","hashOfConfig":"107"},{"size":5916,"mtime":1611875243910,"results":"165","hashOfConfig":"107"},{"size":2875,"mtime":1611404659863,"results":"166","hashOfConfig":"107"},{"size":1031,"mtime":1611863444363,"results":"167","hashOfConfig":"107"},{"size":746,"mtime":1611863464891,"results":"168","hashOfConfig":"107"},{"size":757,"mtime":1609883344093,"results":"169","hashOfConfig":"107"},{"size":746,"mtime":1611863464890,"results":"170","hashOfConfig":"107"},{"size":1145,"mtime":1611863444316,"results":"171","hashOfConfig":"107"},{"size":988,"mtime":1611863444316,"results":"172","hashOfConfig":"107"},{"size":1002,"mtime":1611863464891,"results":"173","hashOfConfig":"107"},{"size":1082,"mtime":1611863464891,"results":"174","hashOfConfig":"107"},{"size":3835,"mtime":1609611156112,"results":"175","hashOfConfig":"107"},{"size":1395,"mtime":1611877069111,"results":"176","hashOfConfig":"107"},{"size":6510,"mtime":1610222213954,"results":"177","hashOfConfig":"107"},{"size":1837,"mtime":1611875957342,"results":"178","hashOfConfig":"107"},{"size":8618,"mtime":1611875276740,"results":"179","hashOfConfig":"107"},{"size":2401,"mtime":1610227688710,"results":"180","hashOfConfig":"107"},{"size":3072,"mtime":1610227477573,"results":"181","hashOfConfig":"107"},{"size":9556,"mtime":1611863801009,"results":"182","hashOfConfig":"107"},{"size":1765,"mtime":1611876619464,"results":"183","hashOfConfig":"107"},{"size":529,"mtime":1611255640016,"results":"184","hashOfConfig":"107"},{"size":1615,"mtime":1611444788369,"results":"185","hashOfConfig":"107"},{"size":4129,"mtime":1611790629929,"results":"186","hashOfConfig":"107"},{"size":3240,"mtime":1611877353690,"results":"187","hashOfConfig":"107"},{"size":8768,"mtime":1611877201864,"results":"188","hashOfConfig":"107"},{"size":2877,"mtime":1611874098648,"results":"189","hashOfConfig":"107"},{"size":2949,"mtime":1611774576136,"results":"190","hashOfConfig":"107"},{"size":193,"mtime":1611443911941,"results":"191","hashOfConfig":"107"},{"size":15250,"mtime":1611875629903,"results":"192","hashOfConfig":"107"},{"size":512,"mtime":1611763591338,"results":"193","hashOfConfig":"107"},{"size":1208,"mtime":1611855242847,"results":"194","hashOfConfig":"107"},{"size":483,"mtime":1611852121914,"results":"195","hashOfConfig":"107"},{"size":540,"mtime":1611857058445,"results":"196","hashOfConfig":"107"},{"size":560,"mtime":1611861213454,"results":"197","hashOfConfig":"107"},{"size":1801,"mtime":1611872431116,"results":"198","hashOfConfig":"107"},{"size":870,"mtime":1611872418419,"results":"199","hashOfConfig":"107"},{"size":2565,"mtime":1611856895874,"results":"200","hashOfConfig":"107"},{"size":453,"mtime":1611857011855,"results":"201","hashOfConfig":"107"},{"size":450,"mtime":1611856019565,"results":"202","hashOfConfig":"107"},{"size":4750,"mtime":1611877810163,"results":"203","hashOfConfig":"107"},{"size":1992,"mtime":1611874169862,"results":"204","hashOfConfig":"107"},{"size":2557,"mtime":1611875260735,"results":"205","hashOfConfig":"107"},{"size":34046,"mtime":1611874794398,"results":"206","hashOfConfig":"107"},{"size":524,"mtime":1611875436874,"results":"207","hashOfConfig":"107"},{"size":672,"mtime":1611875595745,"results":"208","hashOfConfig":"107"},{"size":861,"mtime":1611877177687,"results":"209","hashOfConfig":"107"},{"size":680,"mtime":1611877147859,"results":"210","hashOfConfig":"107"},{"size":963,"mtime":1611877118975,"results":"211","hashOfConfig":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"1lmohov",{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"214"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"214"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"214"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"214"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"214"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\index.tsx",[],["430","431"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\forwarding-signal.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\mathex.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\cframe.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector3.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\quaternion.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector2.ts",[],["432","433"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\uuid.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\classes\\data-model-class-metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\data-model-property-metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\utils\\get-element-size.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\mouse.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\client-replicator.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\world.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\run-service.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\network-replicator.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\data-model-service-base.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\service-base.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\world-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\mouse-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\run-service-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\client-replicator-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\camera.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\instance.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\datamodel.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\primitive.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\world-object.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\service-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-mouse-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-run-service-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-client-replicator-impl.ts",[],["434","435"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\render-canvas.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-world-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-lighting-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\lighting-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\color3.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\lighting.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\point-light.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\light.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\property-type.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Content.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\sky.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\content-provider-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-content-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\content-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\Material.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\material.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\content.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\converters\\cframe-converter.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\point-light-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\perspective-camera-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\sky-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\destroyable.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\objects\\dynamic-instanced-mesh.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\primitive-renderer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\instance-context.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\contexts\\local-client-instance-context.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\type-guards.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-content-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-string-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-boolean-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-number-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-cframe-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-color3-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-vector3-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-quaternion-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-material-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\openworld-canvas.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\inter-thread-communication.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\InstanceUtils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\worker-thread.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-run-service-impl-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-mouse-impl-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-property-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\DataModelUtils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\client-script.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\base-script.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\data-model-debugger.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer.tsx",["436","437"],"import ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Instance from '../../../engine/datamodel/elements/instance';\r\nimport InstanceExplorerItem from './instance-explorer-item';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TreeView, { TreeViewProps } from '@material-ui/lab/TreeView';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { isString } from '../../../engine/utils/type-guards';\r\nimport { Menu, MenuItem, ListItemIcon, ListItemText, SvgIcon, Grid, TextField, InputAdornment, IconButton } from '@material-ui/core';\r\nimport CutIcon from '../icons/CutIcon';\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties;\r\n    instance: Instance;\r\n    multiSelect?: boolean;\r\n    showEditorHiddenInstances?: boolean;\r\n    onInstanceSelect?: (event: React.ChangeEvent<{}>, instances: Instance | Instance[]) => void;\r\n};\r\n\r\nexport default function InstanceExplorer(props: Props) {\r\n    const { \r\n        style, \r\n        instance, \r\n        multiSelect, \r\n        showEditorHiddenInstances, \r\n        onInstanceSelect\r\n    } = props;\r\n\r\n    const [ selectedInstances, setSelectedInstances ] = useState<Instance[]>([]);\r\n\r\n    const [ contextMenuMouseState, setContextMenuMouseState ] =\r\n        React.useState<{ mouseX: number | null, mouseY: number | null }>({ mouseX: null, mouseY: null });\r\n\r\n    const onExplorerItemContextMenu = (event: React.MouseEvent<HTMLLIElement, MouseEvent>, instance: Instance) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (selectedInstances.findIndex(i => i === instance) === -1) {\r\n            setSelectedInstances([ instance ]);\r\n        }\r\n\r\n        setContextMenuMouseState({\r\n            mouseX: event.clientX - 2,\r\n            mouseY: event.clientY - 4,\r\n        });\r\n    };\r\n  \r\n    const closeExplorerItemContextMenu = () => {\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n  \r\n    const onExplorerItemDuplicateClick = () => {\r\n        const clonedInstances: Instance[] = [];\r\n        for (const instance of selectedInstances) {\r\n            const clonedInstance = instance.clone();\r\n            clonedInstance.parent = instance.parent;\r\n\r\n            if (!clonedInstance.name.endsWith('Clone')) {\r\n                clonedInstance.name += ' Clone';\r\n            }\r\n\r\n            clonedInstances.push(clonedInstance);\r\n        }\r\n        \r\n        setSelectedInstances([ ...selectedInstances, ...clonedInstances ]);\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n  \r\n    const onExplorerItemDeleteClick = () => {\r\n        for (const instance of selectedInstances) {\r\n            instance.destroy();\r\n        }\r\n        \r\n        setSelectedInstances([]);\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n\r\n    const onNodeSelect = (event: React.ChangeEvent<{}>, nodeIds: string | string[]) => {\r\n        if (onInstanceSelect === undefined) {\r\n            return;\r\n        }\r\n\r\n        const context = instance['_context'];\r\n\r\n        if (isString(nodeIds)) {\r\n            const selectedInstance = context.findInstance(nodeIds);\r\n            if (selectedInstance !== undefined) { \r\n                setSelectedInstances([ selectedInstance ]);               \r\n                onInstanceSelect(event, selectedInstance);\r\n            } else {                \r\n                setSelectedInstances([]);  \r\n                onInstanceSelect(event, []);\r\n            }\r\n        } else {\r\n            const selectedInstances =\r\n                nodeIds\r\n                    .map(i => context.findInstance(i))\r\n                    .filter(i => i !== undefined) as Instance[];\r\n\r\n            setSelectedInstances(selectedInstances);  \r\n            onInstanceSelect(event, selectedInstances);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>   \r\n                    <TextField\r\n                        label=\"Search\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <DeleteIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <TreeView \r\n                style={style}\r\n                multiSelect={multiSelect as any}\r\n                defaultExpanded={[ instance['_refId'] ]}\r\n                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                defaultExpandIcon={<ChevronRightIcon />}\r\n                selected={selectedInstances.map(i => i['_refId'])}\r\n                onNodeSelect={onNodeSelect}\r\n            >\r\n                <InstanceExplorerItem \r\n                    onContextMenu={onExplorerItemContextMenu}\r\n                    showEditorHiddenInstances={showEditorHiddenInstances}\r\n                    instance={instance} />\r\n                \r\n                <Menu\r\n                    keepMounted\r\n                    open={contextMenuMouseState.mouseY !== null}\r\n                    onClose={closeExplorerItemContextMenu}\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={\r\n                        contextMenuMouseState.mouseY !== null && contextMenuMouseState.mouseX !== null\r\n                            ? { top: contextMenuMouseState.mouseY, left: contextMenuMouseState.mouseX }\r\n                            : undefined\r\n                    }\r\n                >\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <CutIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Cut\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <FileCopyIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Copy\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <AssignmentIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Paste\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <SvgIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Paste Into\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense onClick={onExplorerItemDuplicateClick}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <FileCopyIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Duplicate\" />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                        <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Delete\" />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </TreeView>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-explorer-item.tsx",["438"],"import Instance from '../../../engine/datamodel/elements/instance';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getMetaData } from '../../../engine/datamodel/internals/metadata/metadata';\r\nimport InstanceLabel from './instance-label';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    label: {\r\n      fontWeight: 'inherit',\r\n      color: 'inherit',\r\n      padding: theme.spacing(0.5, 0)\r\n    }\r\n}));\r\n\r\ntype Props = {\r\n    instance: Instance;\r\n    onContextMenu?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>, instance: Instance) => void\r\n};\r\n\r\nfunction createChildExplorerItems(props: Props) {\r\n    const { instance, ...otherProps } = props;\r\n\r\n    return instance.getChildren().map(inst => {\r\n        const metadata = getMetaData(inst);\r\n        if (metadata.hasAttribute('EditorHidden')) {\r\n            return null;\r\n        }\r\n\r\n        return (<InstanceExplorerItem {...otherProps} key={inst['_refId']} instance={inst} />);\r\n    });\r\n};\r\n\r\nexport default function InstanceExplorerItem(props: Props) {\r\n    const { instance, onContextMenu, ...otherProps } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ childExplorerItems, setChildExplorerItems ] = useState(createChildExplorerItems(props));\r\n    useEffect(() => setChildExplorerItems(createChildExplorerItems(props)), [ props ]);\r\n\r\n    useEffect(() => {\r\n        const instanceChildAddedConnection =\r\n            instance.childAdded.connect(() => {\r\n                setChildExplorerItems(createChildExplorerItems(props));\r\n            });\r\n\r\n        const instanceChildRemovedConnection =\r\n            instance.childRemoved.connect(() => {\r\n                setChildExplorerItems(createChildExplorerItems(props));\r\n            });\r\n\r\n        return () => {\r\n            instanceChildAddedConnection.disconnect();\r\n            instanceChildRemovedConnection.disconnect();\r\n        };\r\n    }, [ instance ]);\r\n\r\n    return (\r\n        <TreeItem\r\n            {...otherProps}\r\n            onContextMenu={onContextMenu === undefined ? undefined : (e) => onContextMenu(e, instance)}\r\n            nodeId={instance['_refId']}\r\n            key={instance['_refId']}\r\n            label={<InstanceLabel instance={instance} />}\r\n            classes={{\r\n                label: classes.label\r\n            }}\r\n        >\r\n            { childExplorerItems }\r\n        </TreeItem>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-label.tsx",["439"],"import Instance from '../../../engine/datamodel/elements/instance';\r\nimport InstanceIcon from './instance-icon';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    labelRoot: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(0.5)\r\n    },\r\n    labelText: {\r\n      fontWeight: 'inherit',\r\n      flexGrow: 1\r\n    },\r\n    labelNullText: {\r\n      fontWeight: 'lighter',\r\n      flexGrow: 1\r\n    }\r\n}));\r\n\r\ntype Props = {\r\n    instance: Instance | null\r\n} & Partial<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;\r\n\r\nexport default function InstanceLabel(props: Props) {\r\n    const { instance, ...otherProps } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ instanceName, setInstanceName ] = useState(instance === null ? null : instance.name);\r\n    useEffect(() => setInstanceName(instance === null ? null : instance.name), [ instance ]);\r\n\r\n    useEffect(() => {\r\n        if (instance != null) {\r\n            const instanceNameChangedSignal = instance.getPropertyChangedSignal('name')!;\r\n            const instanceNameChangedConnection =\r\n                instanceNameChangedSignal.connect(() => {\r\n                    setInstanceName(instance.name);\r\n                });\r\n\r\n            return () => {\r\n                instanceNameChangedConnection.disconnect();\r\n            };\r\n        }\r\n    }, [ instance ]);\r\n\r\n    if (instance === null) {\r\n        return (\r\n            <div \r\n                {...otherProps}\r\n                className={classes.labelRoot}\r\n            >    \r\n                <Typography \r\n                    className={classes.labelNullText}\r\n                    variant='body2'                \r\n                >\r\n                    null\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            {...otherProps}\r\n            className={classes.labelRoot}\r\n        >\r\n            <InstanceIcon\r\n                className={classes.labelIcon}\r\n                instance={instance}\r\n            />\r\n\r\n            <Typography \r\n                className={classes.labelText}\r\n                variant='body2'                \r\n            >\r\n                {instanceName}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\text-utils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\components\\editor\\instance-property-editor.tsx",["440","441","442","443","444","445","446","447","448"],"import Color3 from '../../../engine/math/color3';\r\nimport Content from '../../../engine/datamodel/data-types/content';\r\nimport DataModelPropertyMetaData from '../../../engine/datamodel/internals/metadata/properties/data-model-property-metadata';\r\nimport Instance from '../../../engine/datamodel/elements/instance';\r\nimport InstanceLabel from './instance-label';\r\nimport InstanceUtils from '../../../engine/datamodel/utils/InstanceUtils';\r\nimport MathEx from '../../../engine/math/mathex';\r\nimport PropertyType from '../../../engine/datamodel/internals/metadata/properties/property-type';\r\nimport Quaternion from '../../../engine/math/quaternion';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState\r\n    } from 'react';\r\nimport useThrottle from '../hooks/use-throttle';\r\nimport Vector3 from '../../../engine/math/vector3';\r\nimport Vector3Input from './custom-form-inputs/vector3-input';\r\nimport { getMetaData } from '../../../engine/datamodel/internals/metadata/metadata';\r\nimport {\r\n    Button,\r\n    Input,\r\n    MenuItem,\r\n    Select,\r\n    Switch,\r\n    TextField,\r\n    IconButton,\r\n    makeStyles,\r\n    } from '@material-ui/core';\r\n\r\nexport type PropertyEditorProps = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n};\r\n\r\ntype PropertyEditorRenderProps<T> = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n    propertyMetadata: DataModelPropertyMetaData;\r\n    value: T;\r\n    setValue: (newValue: T) => void;\r\n    throttledValue: T;\r\n    hasFocus: boolean,\r\n    setHasFocus: React.Dispatch<React.SetStateAction<boolean>>\r\n};\r\n\r\nfunction createInstancePropertyEditor<T>(render: (renderProps: PropertyEditorRenderProps<T>) => JSX.Element | null) {\r\n    return (props: PropertyEditorProps) => {\r\n        const { instance, propertyName } = props;\r\n\r\n        const propertyMetadata = useMemo(() => {\r\n            const metadata = getMetaData(instance);\r\n            const propMetadata = metadata.properties.get(propertyName);\r\n            if (propMetadata === undefined) {\r\n                throw new Error(`Cannot create property editor for property \"${propertyName}\" as it does not exist on parent instance \"${instance['_refId']}\"`);\r\n            }\r\n            return propMetadata;\r\n        }, [ instance, propertyName ]);\r\n    \r\n        const [ value, _setValue ] = useState<T>(InstanceUtils.unsafeGetProperty(instance, propertyName));    \r\n        const throttledValue = useThrottle(value, 150);\r\n    \r\n        useEffect(() => {\r\n            _setValue(InstanceUtils.unsafeGetProperty(instance, propertyName));\r\n\r\n            const propertyChangedSignal = instance.getPropertyChangedSignal(propertyName)!;\r\n            const propertyChangedConnection = propertyChangedSignal.connect(() => {\r\n                _setValue(InstanceUtils.unsafeGetProperty(instance, propertyName));\r\n            });\r\n    \r\n            return () => {\r\n                propertyChangedConnection.disconnect();\r\n            }\r\n        }, [ instance, propertyName ]);\r\n        \r\n        const [ hasFocus, setHasFocus ] = useState(false);\r\n    \r\n        const setValue = (newValue: T) => {\r\n            if (!propertyMetadata.hasAttribute('ReadOnly')) {\r\n                InstanceUtils.unsafeSetProperty(instance, propertyName, newValue);\r\n            }\r\n        };\r\n\r\n        return render({\r\n            instance,\r\n            propertyName,\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        });\r\n    };\r\n}\r\n\r\n//\r\n// Number Editor\r\n//\r\n\r\nexport const InstanceNumberPropertyEditor =\r\n    createInstancePropertyEditor<number>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Input\r\n                type='number'\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => {\r\n                    const newValue = Number.parseFloat(e.target.value);\r\n                    if (!Number.isNaN(newValue)) {\r\n                        setValue(newValue);\r\n                    }\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Boolean Editor\r\n//\r\n\r\nexport const InstanceBooleanPropertyEditor =\r\n    createInstancePropertyEditor<boolean>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Switch\r\n                size='small'\r\n                color='primary'\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                checked={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.checked)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// String Editor\r\n//\r\n\r\nexport const InstanceStringPropertyEditor =\r\n    createInstancePropertyEditor<string>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Color3 Editor\r\n//\r\n\r\nexport const InstanceColor3PropertyEditor =\r\n    createInstancePropertyEditor<Color3>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Input\r\n                type='color'\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value.toHex() : throttledValue.toHex()}\r\n                onChange={(e) => {\r\n                    const newColor = Color3.fromHex(e.target.value);\r\n                    if (newColor !== undefined) {\r\n                        setValue(newColor);\r\n                    }\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Vector3 Editor\r\n//\r\n\r\nexport const InstanceVector3PropertyEditor =\r\n    createInstancePropertyEditor<Vector3>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        // TODO: Add focus handling!\r\n\r\n        return (\r\n            <Vector3Input\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={throttledValue}\r\n                onChange={setValue}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Quaternion Editor\r\n//\r\n\r\nexport const InstanceQuaternionPropertyEditor =\r\n    createInstancePropertyEditor<Quaternion>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        // TODO: Add focus handling!\r\n\r\n        return (\r\n            <Vector3Input\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={Vector3.multiplyScalar(throttledValue.toEulerAngles(), MathEx.rad2deg)}\r\n                onChange={v => {\r\n                    const newValue = Quaternion.fromEulerAngles(\r\n                        v.x * MathEx.deg2rad,\r\n                        v.y * MathEx.deg2rad,\r\n                        v.z * MathEx.deg2rad\r\n                    );\r\n                    setValue(newValue);\r\n                }}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Content Editor\r\n//\r\n\r\nexport const InstanceContentPropertyEditor =\r\n    createInstancePropertyEditor<Content>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value.toString() : throttledValue.toString()}\r\n                onChange={(e) => {\r\n                    const newValue = new Content(e.target.value);\r\n                    setValue(newValue);\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Enum Editor\r\n//\r\n\r\nexport const InstanceEnumPropertyEditor =\r\n    createInstancePropertyEditor<string>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Select\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.value as string)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            >\r\n                {\r\n                    Object.entries(propertyMetadata.type.enumValue!).map(([ enumKey, enumValue ]) => {\r\n                        return (\r\n                            <MenuItem key={enumKey} value={enumKey}>\r\n                                {enumValue}\r\n                            </MenuItem>\r\n                        );\r\n                    })                    \r\n                }\r\n            </Select>\r\n        );\r\n    });\r\n\r\n//\r\n// InstanceRef Editor\r\n//\r\n\r\nconst useInstanceRefPropertyEditorStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    instanceEditor: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport const InstanceInstanceRefPropertyEditor =\r\n    createInstancePropertyEditor<Instance | null>((renderProps) => {\r\n        const {\r\n            instance,\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        const classes = useInstanceRefPropertyEditorStyles();\r\n\r\n        const onDeleteButtonClick = () => {\r\n            if (propertyMetadata.name === 'parent') {\r\n                instance.destroy();\r\n                return;\r\n            }\r\n\r\n            setValue(null);\r\n        };\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.instanceEditor}>\r\n                    <InstanceLabel instance={value} />\r\n                </div>\r\n        \r\n                <IconButton size=\"small\" onClick={onDeleteButtonClick}>\r\n                    <ClearIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    });    \r\n\r\n//\r\n// General Property Editor\r\n//\r\n\r\nexport type InstancePropertyEditorProps = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n};\r\n\r\nexport default function InstancePropertyEditor(props: InstancePropertyEditorProps) {\r\n    const { instance, propertyName } = props;\r\n\r\n    const propertyMetadata = useMemo(() => {\r\n        const metadata = getMetaData(instance);\r\n        const propMetadata = metadata.properties.get(propertyName);\r\n        if (propMetadata === undefined) {\r\n            throw new Error(`Cannot create property editor for property \"${propertyName}\" as it does not exist on parent instance \"${instance['_refId']}\"`);\r\n        }\r\n        return propMetadata;\r\n    }, [ instance, propertyName ]);\r\n    \r\n    if (propertyMetadata.type === PropertyType.number) {\r\n        return (\r\n            <InstanceNumberPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.boolean) {\r\n        return (\r\n            <InstanceBooleanPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.string) {\r\n        return (\r\n            <InstanceStringPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.color3) {\r\n        return (\r\n            <InstanceColor3PropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.vector3) {\r\n        return (\r\n            <InstanceVector3PropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.quaternion) {\r\n        return (\r\n            <InstanceQuaternionPropertyEditor \r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.content) {\r\n        return (\r\n            <InstanceContentPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    // TODO\r\n    if (propertyMetadata.type === PropertyType.material) {\r\n        return (\r\n            <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                style={{ textTransform: 'none' }}\r\n            >\r\n                Material\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type.isEnum) {\r\n        return (\r\n            <InstanceEnumPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />     \r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type.isInstanceRef) {\r\n        return (\r\n            <InstanceInstanceRefPropertyEditor             \r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />            \r\n        );\r\n    }\r\n\r\n    return null;\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\folder.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\open-world-editor.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\contexts\\editor-context.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\services\\editor-service-container.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\services\\data-services\\project-data-service.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-app-bar.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-body.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\inputs\\vector3-input.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\services\\data-services\\account-data-service.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-observable.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\project-editor.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-instance-ref-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-context-serializer.ts",["449","450","451","452","453","454","455","456"],"import Instance from '../../elements/instance';\r\nimport InstanceContext from '../../internals/instance-context';\r\nimport InstanceUtils from '../../utils/InstanceUtils';\r\nimport JsonInstancePropertySerializer, { InstanceJsonProperty } from './json-instance-property-serializer';\r\nimport { Class } from '../../../utils/types';\r\nimport { getConstructor, getMetaData } from '../../internals/metadata/metadata';\r\nimport { hasFieldOfType, isObject, isString } from '../../../utils/type-guards';\r\nimport JsonInstanceSerializer, { InstanceJson } from './json-instance-serializer';\r\n\r\nexport type InstanceContextJson = {\r\n    [ key: string ]: InstanceJson\r\n};\r\n\r\nexport default class JsonInstanceContextSerializer\r\n{\r\n    //\r\n    // Constructor\r\n    //\r\n\r\n    private constructor() {\r\n        // No-op\r\n    }\r\n\r\n    //\r\n    // Methods\r\n    //\r\n\r\n    public static verifyObject(json: unknown): json is InstanceContextJson {\r\n        if (isObject(json)) {\r\n            for (const instanceJson of Object.values(json)) {\r\n                if (!JsonInstanceSerializer.verifyObject(instanceJson)) {\r\n                    return false;\r\n                }\r\n            }\r\n            \r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static serializeToObject(obj: InstanceContext): InstanceContextJson {\r\n        const json: InstanceContextJson = {};\r\n\r\n        for (const instance of obj.getActiveInstances()) {\r\n            const instanceRefId = InstanceUtils.getRefId(instance);\r\n            json[instanceRefId] = JsonInstanceSerializer.serializeToObject(instance);\r\n        }\r\n        \r\n        return json;\r\n    }\r\n\r\n    public static deserializeObject(\r\n        instanceContextJson: unknown,\r\n        context: InstanceContext\r\n    ): void {\r\n        if (!JsonInstanceContextSerializer.verifyObject(instanceContextJson)) {\r\n            throw new Error('Invalid json instance context object');\r\n        }\r\n\r\n        JsonInstanceContextSerializer.deserializeObjectUnsafe(\r\n            instanceContextJson,\r\n            context\r\n        );\r\n    }\r\n\r\n    public static deserializeObjectUnsafe(\r\n        instanceContextJson: InstanceContextJson,\r\n        context: InstanceContext\r\n    ): void {\r\n        for (const instanceJsonKey in instanceContextJson) {\r\n            const instanceJson = instanceContextJson[instanceJsonKey];\r\n\r\n            JsonInstanceSerializer.deserializeObject(\r\n                instanceJson,\r\n                context,\r\n                true\r\n            );\r\n        }\r\n    }\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\testdata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\worker-threads\\client-script-thread-worker.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-throttle.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\open-folder-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cut-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cube-icon.tsx",[],{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","replacedBy":"460"},{"ruleId":"457","replacedBy":"461"},{"ruleId":"459","replacedBy":"462"},{"ruleId":"457","replacedBy":"463"},{"ruleId":"459","replacedBy":"464"},{"ruleId":"465","severity":1,"message":"466","line":5,"column":27,"nodeType":"467","messageId":"468","endLine":5,"endColumn":36},{"ruleId":"465","severity":1,"message":"469","line":6,"column":20,"nodeType":"467","messageId":"468","endLine":6,"endColumn":33},{"ruleId":"470","severity":1,"message":"471","line":56,"column":8,"nodeType":"472","endLine":56,"endColumn":20,"suggestions":"473"},{"ruleId":"465","severity":1,"message":"474","line":35,"column":13,"nodeType":"467","messageId":"468","endLine":35,"endColumn":27},{"ruleId":"465","severity":1,"message":"475","line":226,"column":13,"nodeType":"467","messageId":"468","endLine":226,"endColumn":18},{"ruleId":"465","severity":1,"message":"476","line":229,"column":13,"nodeType":"467","messageId":"468","endLine":229,"endColumn":21},{"ruleId":"465","severity":1,"message":"477","line":230,"column":13,"nodeType":"467","messageId":"468","endLine":230,"endColumn":24},{"ruleId":"465","severity":1,"message":"475","line":252,"column":13,"nodeType":"467","messageId":"468","endLine":252,"endColumn":18},{"ruleId":"465","severity":1,"message":"476","line":255,"column":13,"nodeType":"467","messageId":"468","endLine":255,"endColumn":21},{"ruleId":"465","severity":1,"message":"477","line":256,"column":13,"nodeType":"467","messageId":"468","endLine":256,"endColumn":24},{"ruleId":"465","severity":1,"message":"478","line":366,"column":13,"nodeType":"467","messageId":"468","endLine":366,"endColumn":27},{"ruleId":"465","severity":1,"message":"476","line":367,"column":13,"nodeType":"467","messageId":"468","endLine":367,"endColumn":21},{"ruleId":"465","severity":1,"message":"477","line":368,"column":13,"nodeType":"467","messageId":"468","endLine":368,"endColumn":24},{"ruleId":"465","severity":1,"message":"479","line":1,"column":8,"nodeType":"467","messageId":"468","endLine":1,"endColumn":16},{"ruleId":"465","severity":1,"message":"480","line":4,"column":8,"nodeType":"467","messageId":"468","endLine":4,"endColumn":38},{"ruleId":"465","severity":1,"message":"481","line":4,"column":42,"nodeType":"467","messageId":"468","endLine":4,"endColumn":62},{"ruleId":"465","severity":1,"message":"482","line":5,"column":10,"nodeType":"467","messageId":"468","endLine":5,"endColumn":15},{"ruleId":"465","severity":1,"message":"483","line":6,"column":10,"nodeType":"467","messageId":"468","endLine":6,"endColumn":24},{"ruleId":"465","severity":1,"message":"484","line":6,"column":26,"nodeType":"467","messageId":"468","endLine":6,"endColumn":37},{"ruleId":"465","severity":1,"message":"485","line":7,"column":10,"nodeType":"467","messageId":"468","endLine":7,"endColumn":24},{"ruleId":"465","severity":1,"message":"486","line":7,"column":36,"nodeType":"467","messageId":"468","endLine":7,"endColumn":44},"no-native-reassign",["487"],"no-negated-in-lhs",["488"],["487"],["488"],["487"],["488"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'TreeViewProps' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. If 'setChildExplorerItems' needs the current value of 'props', you can also switch to useReducer instead of useState and read 'props' in the reducer.","ArrayExpression",["489"],"'collectedProps' is assigned a value but never used.","'value' is assigned a value but never used.","'hasFocus' is assigned a value but never used.","'setHasFocus' is assigned a value but never used.","'throttledValue' is assigned a value but never used.","'Instance' is defined but never used.","'JsonInstancePropertySerializer' is defined but never used.","'InstanceJsonProperty' is defined but never used.","'Class' is defined but never used.","'getConstructor' is defined but never used.","'getMetaData' is defined but never used.","'hasFieldOfType' is defined but never used.","'isString' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"490","fix":"491"},"Update the dependencies array to be: [instance, props]",{"range":"492","text":"493"},[1953,1965],"[instance, props]"]