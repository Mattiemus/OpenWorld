[{"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\index.tsx":"1","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\DataModelUtils.ts":"2","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-app.tsx":"3","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\camera.ts":"4","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\datamodel.ts":"5","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\instance.ts":"6","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\point-light.ts":"7","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\service-provider.ts":"8","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\primitive.ts":"9","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\sky.ts":"10","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\world-object.ts":"11","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\client-script.ts":"12","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\light.ts":"13","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\folder.ts":"14","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\content-provider.ts":"15","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\client-replicator.ts":"16","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\base-script.ts":"17","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\lighting.ts":"18","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\mouse.ts":"19","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\world.ts":"20","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\network-replicator.ts":"21","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\run-service.ts":"22","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-app-bar.tsx":"23","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-body.tsx":"24","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\InstanceUtils.ts":"25","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector3.ts":"26","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\cframe.ts":"27","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\color3.ts":"28","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\mathex.ts":"29","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\material.ts":"30","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\type-guards.ts":"31","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\content-provider-impl.ts":"32","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\client-replicator-impl.ts":"33","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\run-service-impl.ts":"34","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\mouse-impl.ts":"35","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\world-impl.ts":"36","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\forwarding-signal.ts":"37","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\metadata.ts":"38","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\lighting-impl.ts":"39","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\property-type.ts":"40","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\testdata.ts":"41","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\models\\project.ts":"42","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-constant.ts":"43","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\project-editor.tsx":"44","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\quaternion.ts":"45","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\content.ts":"46","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\data-model-service-base.ts":"47","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\classes\\data-model-class-metadata.ts":"48","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\contexts\\project-editor-context.ts":"49","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client-shared\\components\\instance-context-render-canvas.tsx":"50","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\tabs\\project-editor-tabs.tsx":"51","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\panels\\project-editor-panels.tsx":"52","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\uuid.ts":"53","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\service-base.ts":"54","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\data-model-property-metadata.ts":"55","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-context-serializer.ts":"56","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-observable.ts":"57","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\destroyable.ts":"58","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\panels\\explorer-panel.tsx":"59","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\panels\\content-panel.tsx":"60","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-serializer.ts":"61","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\_to-organise\\instance-explorer.tsx":"62","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-editor.tsx":"63","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\panels\\panel-header.tsx":"64","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-property-serializer.ts":"65","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\text-utils.ts":"66","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-property-editor.tsx":"67","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-vector3-serializer.ts":"68","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-quaternion-serializer.ts":"69","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-material-serializer.ts":"70","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-instance-ref-serializer.ts":"71","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-number-serializer.ts":"72","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-string-serializer.ts":"73","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-content-serializer.ts":"74","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-color3-serializer.ts":"75","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-cframe-serializer.ts":"76","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-boolean-serializer.ts":"77","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\_to-organise\\instance-explorer-item.tsx":"78","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cut-icon.tsx":"79","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-throttle.ts":"80","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\inputs\\vector3-input.tsx":"81","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-label.tsx":"82","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\instance-contexts\\local-client-instance-context.ts":"83","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\instance-context.ts":"84","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-icon.tsx":"85","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-mouse-impl.ts":"86","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-content-provider.ts":"87","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-world-impl.ts":"88","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-run-service-impl.ts":"89","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\render-canvas.ts":"90","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-lighting-impl.ts":"91","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\worker-thread.tsx":"92","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\primitive-renderer.ts":"93","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\sky-proxy.ts":"94","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\perspective-camera-proxy.ts":"95","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\point-light-proxy.ts":"96","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\inter-thread-communication.ts":"97","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-mouse-impl-proxy.ts":"98","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-run-service-impl-proxy.ts":"99","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\open-folder-icon.tsx":"100","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cube-icon.tsx":"101","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\objects\\dynamic-instanced-mesh.ts":"102","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\converters\\cframe-converter.ts":"103","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\worker-threads\\client-script-thread-worker.ts":"104"},{"size":428,"mtime":1611940933007,"results":"105","hashOfConfig":"106"},{"size":1765,"mtime":1611876619464,"results":"107","hashOfConfig":"106"},{"size":682,"mtime":1612046687918,"results":"108","hashOfConfig":"106"},{"size":4027,"mtime":1611488914208,"results":"109","hashOfConfig":"106"},{"size":547,"mtime":1610145554446,"results":"110","hashOfConfig":"106"},{"size":16657,"mtime":1611774965016,"results":"111","hashOfConfig":"106"},{"size":1130,"mtime":1611252798914,"results":"112","hashOfConfig":"106"},{"size":835,"mtime":1610143987331,"results":"113","hashOfConfig":"106"},{"size":3670,"mtime":1611252712842,"results":"114","hashOfConfig":"106"},{"size":4154,"mtime":1611252798912,"results":"115","hashOfConfig":"106"},{"size":2591,"mtime":1611503990183,"results":"116","hashOfConfig":"106"},{"size":529,"mtime":1611255640016,"results":"117","hashOfConfig":"106"},{"size":2102,"mtime":1611252798912,"results":"118","hashOfConfig":"106"},{"size":512,"mtime":1611763591338,"results":"119","hashOfConfig":"106"},{"size":968,"mtime":1611435437014,"results":"120","hashOfConfig":"106"},{"size":1001,"mtime":1611435408273,"results":"121","hashOfConfig":"106"},{"size":1615,"mtime":1611444788369,"results":"122","hashOfConfig":"106"},{"size":1559,"mtime":1611252904125,"results":"123","hashOfConfig":"106"},{"size":6768,"mtime":1611767038594,"results":"124","hashOfConfig":"106"},{"size":1763,"mtime":1611252904125,"results":"125","hashOfConfig":"106"},{"size":368,"mtime":1611435396327,"results":"126","hashOfConfig":"106"},{"size":2605,"mtime":1611435388343,"results":"127","hashOfConfig":"106"},{"size":3647,"mtime":1612042225965,"results":"128","hashOfConfig":"106"},{"size":584,"mtime":1612048257400,"results":"129","hashOfConfig":"106"},{"size":1837,"mtime":1611875957342,"results":"130","hashOfConfig":"106"},{"size":2553,"mtime":1611770261358,"results":"131","hashOfConfig":"106"},{"size":2021,"mtime":1611608126091,"results":"132","hashOfConfig":"106"},{"size":5061,"mtime":1611770434436,"results":"133","hashOfConfig":"106"},{"size":1909,"mtime":1611608830082,"results":"134","hashOfConfig":"106"},{"size":2810,"mtime":1609590726825,"results":"135","hashOfConfig":"106"},{"size":2875,"mtime":1611404659863,"results":"136","hashOfConfig":"106"},{"size":349,"mtime":1609630624085,"results":"137","hashOfConfig":"106"},{"size":353,"mtime":1609630566249,"results":"138","hashOfConfig":"106"},{"size":798,"mtime":1609630624088,"results":"139","hashOfConfig":"106"},{"size":1169,"mtime":1611766840209,"results":"140","hashOfConfig":"106"},{"size":308,"mtime":1609630624088,"results":"141","hashOfConfig":"106"},{"size":767,"mtime":1609261336310,"results":"142","hashOfConfig":"106"},{"size":5426,"mtime":1611438318127,"results":"143","hashOfConfig":"106"},{"size":320,"mtime":1609630624084,"results":"144","hashOfConfig":"106"},{"size":3122,"mtime":1611686264483,"results":"145","hashOfConfig":"106"},{"size":32559,"mtime":1612049929470,"results":"146","hashOfConfig":"106"},{"size":197,"mtime":1612048257401,"results":"147","hashOfConfig":"106"},{"size":314,"mtime":1612047472699,"results":"148","hashOfConfig":"106"},{"size":3627,"mtime":1612049365228,"results":"149","hashOfConfig":"106"},{"size":6024,"mtime":1611770387461,"results":"150","hashOfConfig":"106"},{"size":799,"mtime":1610899300296,"results":"151","hashOfConfig":"106"},{"size":1424,"mtime":1609632784020,"results":"152","hashOfConfig":"106"},{"size":1425,"mtime":1609261500809,"results":"153","hashOfConfig":"106"},{"size":3750,"mtime":1612052109638,"results":"154","hashOfConfig":"106"},{"size":678,"mtime":1612012067941,"results":"155","hashOfConfig":"106"},{"size":3228,"mtime":1612048780689,"results":"156","hashOfConfig":"106"},{"size":2370,"mtime":1612048673287,"results":"157","hashOfConfig":"106"},{"size":714,"mtime":1609497833127,"results":"158","hashOfConfig":"106"},{"size":170,"mtime":1609632799529,"results":"159","hashOfConfig":"106"},{"size":894,"mtime":1609278448334,"results":"160","hashOfConfig":"106"},{"size":2557,"mtime":1611936319349,"results":"161","hashOfConfig":"106"},{"size":452,"mtime":1612044449103,"results":"162","hashOfConfig":"106"},{"size":635,"mtime":1609632818542,"results":"163","hashOfConfig":"106"},{"size":2892,"mtime":1612048382829,"results":"164","hashOfConfig":"106"},{"size":605,"mtime":1612010543276,"results":"165","hashOfConfig":"106"},{"size":5916,"mtime":1611875243910,"results":"166","hashOfConfig":"106"},{"size":14411,"mtime":1612040535089,"results":"167","hashOfConfig":"106"},{"size":3501,"mtime":1612049662989,"results":"168","hashOfConfig":"106"},{"size":799,"mtime":1611966201277,"results":"169","hashOfConfig":"106"},{"size":9556,"mtime":1611863801009,"results":"170","hashOfConfig":"106"},{"size":193,"mtime":1611443911941,"results":"171","hashOfConfig":"106"},{"size":15691,"mtime":1612016651194,"results":"172","hashOfConfig":"106"},{"size":1002,"mtime":1611863464891,"results":"173","hashOfConfig":"106"},{"size":1082,"mtime":1611863464891,"results":"174","hashOfConfig":"106"},{"size":3835,"mtime":1609611156112,"results":"175","hashOfConfig":"106"},{"size":1992,"mtime":1611874169862,"results":"176","hashOfConfig":"106"},{"size":746,"mtime":1611863464890,"results":"177","hashOfConfig":"106"},{"size":746,"mtime":1611863464891,"results":"178","hashOfConfig":"106"},{"size":1031,"mtime":1611863444363,"results":"179","hashOfConfig":"106"},{"size":988,"mtime":1611863444316,"results":"180","hashOfConfig":"106"},{"size":1145,"mtime":1611863444316,"results":"181","hashOfConfig":"106"},{"size":757,"mtime":1609883344093,"results":"182","hashOfConfig":"106"},{"size":2852,"mtime":1611966545449,"results":"183","hashOfConfig":"106"},{"size":680,"mtime":1611877147859,"results":"184","hashOfConfig":"106"},{"size":672,"mtime":1611875595745,"results":"185","hashOfConfig":"106"},{"size":2565,"mtime":1611856895874,"results":"186","hashOfConfig":"106"},{"size":2989,"mtime":1612015970462,"results":"187","hashOfConfig":"106"},{"size":3678,"mtime":1612037932433,"results":"188","hashOfConfig":"106"},{"size":6103,"mtime":1612037931587,"results":"189","hashOfConfig":"106"},{"size":3221,"mtime":1611963512222,"results":"190","hashOfConfig":"106"},{"size":5767,"mtime":1611766799147,"results":"191","hashOfConfig":"106"},{"size":2186,"mtime":1611674765154,"results":"192","hashOfConfig":"106"},{"size":5562,"mtime":1610148240126,"results":"193","hashOfConfig":"106"},{"size":3085,"mtime":1609632512616,"results":"194","hashOfConfig":"106"},{"size":5609,"mtime":1612012020816,"results":"195","hashOfConfig":"106"},{"size":3674,"mtime":1611770670561,"results":"196","hashOfConfig":"106"},{"size":8618,"mtime":1611875276740,"results":"197","hashOfConfig":"106"},{"size":10976,"mtime":1611446217849,"results":"198","hashOfConfig":"106"},{"size":8715,"mtime":1609436829902,"results":"199","hashOfConfig":"106"},{"size":2796,"mtime":1611443468592,"results":"200","hashOfConfig":"106"},{"size":3519,"mtime":1611674806289,"results":"201","hashOfConfig":"106"},{"size":6510,"mtime":1610222213954,"results":"202","hashOfConfig":"106"},{"size":3072,"mtime":1610227477573,"results":"203","hashOfConfig":"106"},{"size":2401,"mtime":1610227688710,"results":"204","hashOfConfig":"106"},{"size":861,"mtime":1611877177687,"results":"205","hashOfConfig":"106"},{"size":963,"mtime":1611877118975,"results":"206","hashOfConfig":"106"},{"size":6224,"mtime":1609547953818,"results":"207","hashOfConfig":"106"},{"size":1717,"mtime":1609504955088,"results":"208","hashOfConfig":"106"},{"size":533,"mtime":1611936432300,"results":"209","hashOfConfig":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},"1lmohov",{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"212"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"212"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"212"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"212"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"212"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"212"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"425"},"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\index.tsx",[],["426","427"],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\DataModelUtils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-app.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\camera.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\datamodel.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\instance.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\point-light.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\service-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\primitive.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\sky.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\world-object.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\client-script.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\light.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\folder.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\content-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\client-replicator.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\elements\\base-script.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\lighting.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\mouse.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\world.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\network-replicator.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\services\\run-service.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-app-bar.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\editor-body.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\utils\\InstanceUtils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\vector3.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\cframe.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\color3.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\mathex.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\material.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\type-guards.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\content-provider-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\client-replicator-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\run-service-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\mouse-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\world-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\forwarding-signal.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\lighting-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\property-type.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\testdata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\models\\project.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-constant.ts",["428"],"import React, { useRef } from 'react'\r\n\r\ntype ResultBox<T> = {\r\n    value: T\r\n};\r\n\r\nexport default function useConstant<T>(fn: () => T): T {\r\n    const ref = useRef<ResultBox<T>>();\r\n\r\n    if (!ref.current) {\r\n        ref.current = { \r\n            value: fn()\r\n        };\r\n    }\r\n\r\n    return ref.current.value;\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\project-editor.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\math\\quaternion.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\data-types\\content.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\data-model-service-base.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\classes\\data-model-class-metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\contexts\\project-editor-context.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client-shared\\components\\instance-context-render-canvas.tsx",["429"],"import React, { useLayoutEffect } from \"react\";\r\nimport IInstanceContextWithCanvas from \"../instance-contexts/instance-context-with-canvas\";\r\n\r\nexport type InstanceContextRenderCanvasProps = {\r\n    instanceContext: IInstanceContextWithCanvas;\r\n};\r\n\r\nexport default function InstanceContextRenderCanvas(props: InstanceContextRenderCanvasProps) {\r\n    const { instanceContext } = props;\r\n\r\n    useLayoutEffect(() => {\r\n        return () => {\r\n            instanceContext.canvas = null;\r\n        }\r\n    }, []);\r\n\r\n    const setCanvas = (canvas: HTMLCanvasElement) => {\r\n        instanceContext.canvas = canvas;\r\n    };\r\n\r\n    return (\r\n        <canvas ref={setCanvas} />\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\tabs\\project-editor-tabs.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\panels\\project-editor-panels.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\uuid.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\services\\base\\service-base.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\metadata\\properties\\data-model-property-metadata.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-context-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-observable.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\destroyable.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\panels\\explorer-panel.tsx",["430"],"import Instance from '../../../../engine/datamodel/elements/instance';\r\nimport InstanceContext from '../../../../engine/datamodel/internals/instance-context';\r\nimport InstanceEditor from '../../../core/components/instances/instance-editor';\r\nimport InstanceExplorer from '../../_to-organise/instance-explorer';\r\nimport React, { useState } from 'react';\r\nimport SimpleBar from 'simplebar-react';\r\nimport { isArray } from '../../../../engine/utils/type-guards';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport PanelHeader from '../../../core/components/panels/panel-header';\r\nimport { useProjectEditorInstanceContext } from '../../../core/contexts/project-editor-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flex: '1',\r\n        flexDirection: 'column'\r\n    },\r\n    instanceExplorer: {\r\n        display: 'flex',\r\n        flex: '2',\r\n        padding: theme.spacing(1)\r\n    },\r\n    instanceProperties: {\r\n        display: 'flex',\r\n        flex: '1',\r\n        padding: theme.spacing(1)\r\n    },\r\n    instancePropertiesSimpleBar: {\r\n        display: 'flex',\r\n        flex: '1'\r\n    }\r\n}));\r\n\r\nexport type ExplorerPanelProps = {\r\n};\r\n\r\nexport default function ExplorerPanel(props: ExplorerPanelProps) {\r\n    const classes = useStyles();\r\n\r\n    const editorInstanceContext = useProjectEditorInstanceContext();\r\n\r\n    const [ selectedInstance, setSelectedInstance ] = useState<Instance | null>(null);\r\n\r\n    const onInstanceSelect = (_event: React.ChangeEvent<{}>, instances: Instance | Instance[]) => {\r\n        if (isArray(instances)) {\r\n            if (instances.length === 0) {                \r\n                setSelectedInstance(null);\r\n            } else {\r\n                setSelectedInstance(instances[0]);\r\n            }\r\n        } else {\r\n            setSelectedInstance(instances);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <PanelHeader>\r\n                Explorer\r\n            </PanelHeader>\r\n            \r\n            <div className={classes.instanceExplorer}>\r\n                <InstanceExplorer\r\n                    instance={editorInstanceContext.dataModel}\r\n                    showEditorHiddenInstances={true}\r\n                    multiSelect={true}\r\n                    onInstanceSelect={onInstanceSelect}\r\n                />\r\n            </div>\r\n            \r\n            <PanelHeader>\r\n                Properties\r\n            </PanelHeader>\r\n\r\n            <div className={classes.instanceProperties}>\r\n                { \r\n                    selectedInstance &&\r\n                    <SimpleBar className={classes.instancePropertiesSimpleBar}>\r\n                        <InstanceEditor\r\n                            instance={selectedInstance} \r\n                        />\r\n                    </SimpleBar>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\project-editor\\panels\\content-panel.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\_to-organise\\instance-explorer.tsx",["431","432"],"import AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CutIcon from '../../core/components/icons/cut-icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Instance from '../../../engine/datamodel/elements/instance';\r\nimport InstanceExplorerItem from './instance-explorer-item';\r\nimport InstanceUtils from '../../../engine/datamodel/utils/InstanceUtils';\r\nimport React, { useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SimpleBar from 'simplebar-react';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess';\r\nimport {\r\n    IconButton,\r\n    InputAdornment,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    SvgIcon,\r\n    TextField,\r\n    Divider,\r\n    MenuItemProps,\r\n    ListItemSecondaryAction,\r\n    ListItem\r\n    } from '@material-ui/core';\r\nimport { isString } from '../../../engine/utils/type-guards';\r\n\r\nexport type InstanceExplorerProps = {\r\n    instance: Instance;\r\n    multiSelect?: boolean;\r\n    showEditorHiddenInstances?: boolean;\r\n    onInstanceSelect?: (event: React.ChangeEvent<{}>, instances: Instance | Instance[]) => void;\r\n};\r\n\r\nexport default function InstanceExplorer(props: InstanceExplorerProps) {\r\n    const {\r\n        instance, \r\n        multiSelect, \r\n        showEditorHiddenInstances, \r\n        onInstanceSelect\r\n    } = props;\r\n\r\n    const [ selectedInstances, setSelectedInstances ] = useState<Instance[]>([]);\r\n\r\n    const [ contextMenuMouseState, setContextMenuMouseState ] =\r\n        useState<{ mouseX: number | null, mouseY: number | null }>({ mouseX: null, mouseY: null });\r\n\r\n    const onExplorerItemContextMenu = (event: React.MouseEvent<HTMLLIElement, MouseEvent>, instance: Instance) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (selectedInstances.findIndex(i => i === instance) === -1) {\r\n            setSelectedInstances([ instance ]);\r\n        }\r\n\r\n        setContextMenuMouseState({\r\n            mouseX: event.clientX - 2,\r\n            mouseY: event.clientY - 4,\r\n        });\r\n    };\r\n  \r\n    const closeExplorerItemContextMenu = () => {\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n  \r\n    const onExplorerItemDuplicateClick = () => {\r\n        const clonedInstances: Instance[] = [];\r\n        for (const instance of selectedInstances) {\r\n            const clonedInstance = instance.clone();\r\n            clonedInstance.parent = instance.parent;\r\n\r\n            if (!clonedInstance.name.endsWith('Clone')) {\r\n                clonedInstance.name += ' Clone';\r\n            }\r\n\r\n            clonedInstances.push(clonedInstance);\r\n        }\r\n        \r\n        setSelectedInstances([ ...selectedInstances, ...clonedInstances ]);\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n  \r\n    const onExplorerItemDeleteClick = () => {\r\n        for (const instance of selectedInstances) {\r\n            instance.destroy();\r\n        }\r\n        \r\n        setSelectedInstances([]);\r\n        setContextMenuMouseState({ mouseX: null, mouseY: null });\r\n    };\r\n\r\n    const onNodeSelect = (event: React.ChangeEvent<{}>, nodeIds: string | string[]) => {\r\n        if (onInstanceSelect === undefined) {\r\n            return;\r\n        }\r\n\r\n        const context = instance['_context'];\r\n\r\n        if (isString(nodeIds)) {\r\n            const selectedInstance = context.findInstance(nodeIds);\r\n            if (selectedInstance !== undefined) { \r\n                setSelectedInstances([ selectedInstance ]);               \r\n                onInstanceSelect(event, selectedInstance);\r\n            } else {                \r\n                setSelectedInstances([]);  \r\n                onInstanceSelect(event, []);\r\n            }\r\n        } else {\r\n            const selectedInstances =\r\n                nodeIds\r\n                    .map(i => context.findInstance(i))\r\n                    .filter(i => i !== undefined) as Instance[];\r\n\r\n            setSelectedInstances(selectedInstances);  \r\n            onInstanceSelect(event, selectedInstances);\r\n        }\r\n    };\r\n\r\n    const [ filter, setFilter ] = useState<string | undefined>(undefined);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexBasis: '100%', flexDirection: 'column' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\r\n                <div style={{ flexGrow: 1, marginLeft: '4px' }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder=\"Filter Elements\"\r\n                        value={filter === undefined ? '' : filter}\r\n                        onChange={e => {\r\n                            setFilter(e.target.value.length === 0 ? undefined : e.target.value);\r\n                        }}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SearchIcon />\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <IconButton size=\"small\">\r\n                    <VisibilityIcon />\r\n                </IconButton>\r\n\r\n                <IconButton size=\"small\">\r\n                    <UnfoldLessIcon />\r\n                </IconButton>\r\n            </div>\r\n\r\n            <SimpleBar style={{ display: 'flex', flex: '1' }}>\r\n                <div style={{ display: 'flex', flex: '1', width: '100%' }}>\r\n                    <TreeView\r\n                        style={{ width: '100%' }}\r\n                        multiSelect={multiSelect as any}\r\n                        defaultExpanded={[ InstanceUtils.getRefId(instance) ]}\r\n                        defaultCollapseIcon={<ExpandMoreIcon />}\r\n                        defaultExpandIcon={<ChevronRightIcon />}\r\n                        selected={selectedInstances.map(i => InstanceUtils.getRefId(i))}\r\n                        onNodeSelect={onNodeSelect}\r\n                    >\r\n                        <InstanceExplorerItem\r\n                            onContextMenu={onExplorerItemContextMenu}\r\n                            showEditorHiddenInstances={showEditorHiddenInstances}\r\n                            instance={instance} />\r\n                        \r\n                        <Menu\r\n                            keepMounted\r\n                            open={contextMenuMouseState.mouseY !== null}\r\n                            onClose={closeExplorerItemContextMenu}\r\n                            anchorReference=\"anchorPosition\"\r\n                            anchorPosition={\r\n                                contextMenuMouseState.mouseY !== null && contextMenuMouseState.mouseX !== null\r\n                                    ? { top: contextMenuMouseState.mouseY, left: contextMenuMouseState.mouseX }\r\n                                    : undefined\r\n                            }\r\n                        >\r\n                            <MenuItem dense disabled onClick={closeExplorerItemContextMenu} style={{ minWidth: '300px' }}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <CutIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Cut\" />\r\n                                <ListItemSecondaryAction>                                \r\n                                    <ListItemText primary=\"Ctrl+X\" primaryTypographyProps={{ color: 'textSecondary' }} />\r\n                                </ListItemSecondaryAction>\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <FileCopyIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Copy\" />\r\n                                <ListItemSecondaryAction>                                \r\n                                    <ListItemText primary=\"Ctrl+C\" primaryTypographyProps={{ color: 'textSecondary' }} />\r\n                                </ListItemSecondaryAction>\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <AssignmentIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Paste\" />\r\n                                <ListItemSecondaryAction>                                \r\n                                    <ListItemText primary=\"Ctrl+V\" primaryTypographyProps={{ color: 'textSecondary' }} />\r\n                                </ListItemSecondaryAction>\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Paste Into\" />\r\n                                <ListItemSecondaryAction>                                \r\n                                    <ListItemText primary=\"Ctrl+Shirt+V\" primaryTypographyProps={{ color: 'textSecondary' }} />\r\n                                </ListItemSecondaryAction>\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDuplicateClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <FileCopyIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Duplicate\" />\r\n                                <ListItemSecondaryAction>                                \r\n                                    <ListItemText primary=\"Ctrl+D\" primaryTypographyProps={{ color: 'textSecondary' }} />\r\n                                </ListItemSecondaryAction>\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <DeleteIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Delete\" />\r\n                                <ListItemSecondaryAction>                                \r\n                                    <ListItemText primary=\"Del\" primaryTypographyProps={{ color: 'textSecondary' }} />\r\n                                </ListItemSecondaryAction>\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense disabled onClick={closeExplorerItemContextMenu}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Rename\" />\r\n                                <ListItemSecondaryAction>                                \r\n                                    <ListItemText primary=\"F2\" primaryTypographyProps={{ color: 'textSecondary' }} />\r\n                                </ListItemSecondaryAction>\r\n                            </MenuItem>\r\n\r\n                            <Divider orientation=\"horizontal\" />\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Insert Primitive\" />\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Insert\" />\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Insert from File...\" />\r\n                            </MenuItem>\r\n\r\n                            <Divider orientation=\"horizontal\" />\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Save to File...\" />\r\n                            </MenuItem>\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Save as Prefab...\" />\r\n                            </MenuItem>\r\n\r\n                            <Divider orientation=\"horizontal\" />\r\n\r\n                            <MenuItem dense onClick={onExplorerItemDeleteClick}>\r\n                                <ListItemIcon>\t\t\t\t\t\t\t\t\t\r\n                                    <SvgIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Help\" />\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </TreeView>\r\n                </div>\r\n            </SimpleBar>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-editor.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\panels\\panel-header.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\json-instance-property-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\utils\\text-utils.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-property-editor.tsx",["433","434","435","436","437","438","439","440","441","442"],"import Color3 from '../../../../engine/math/color3';\r\nimport Content from '../../../../engine/datamodel/data-types/content';\r\nimport DataModelPropertyMetaData from '../../../../engine/datamodel/internals/metadata/properties/data-model-property-metadata';\r\nimport Instance from '../../../../engine/datamodel/elements/instance';\r\nimport InstanceLabel from './instance-label';\r\nimport InstanceUtils from '../../../../engine/datamodel/utils/InstanceUtils';\r\nimport MathEx from '../../../../engine/math/mathex';\r\nimport PropertyType from '../../../../engine/datamodel/internals/metadata/properties/property-type';\r\nimport Quaternion from '../../../../engine/math/quaternion';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport React, {\r\n    useEffect,\r\n    useMemo,\r\n    useState\r\n    } from 'react';\r\nimport useThrottle from '../../hooks/use-throttle';\r\nimport Vector3 from '../../../../engine/math/vector3';\r\nimport Vector3Input from '../inputs/vector3-input';\r\nimport { getMetaData } from '../../../../engine/datamodel/internals/metadata/metadata';\r\nimport {\r\n    Button,\r\n    Input,\r\n    MenuItem,\r\n    Select,\r\n    Switch,\r\n    TextField,\r\n    IconButton,\r\n    InputAdornment,\r\n    makeStyles,\r\n    Tooltip,\r\n    } from '@material-ui/core';\r\n\r\n//\r\n// Property Editor Factory\r\n//\r\n\r\nexport type PropertyEditorProps = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n};\r\n\r\ntype PropertyEditorRenderProps<T> = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n    propertyMetadata: DataModelPropertyMetaData;\r\n    value: T;\r\n    setValue: (newValue: T) => void;\r\n    throttledValue: T;\r\n    hasFocus: boolean,\r\n    setHasFocus: React.Dispatch<React.SetStateAction<boolean>>\r\n};\r\n\r\nfunction createInstancePropertyEditor<T>(render: (renderProps: PropertyEditorRenderProps<T>) => JSX.Element | null) {\r\n    return (props: PropertyEditorProps) => {\r\n        const { instance, propertyName } = props;\r\n\r\n        const propertyMetadata = useMemo(() => {\r\n            const metadata = getMetaData(instance);\r\n            const propMetadata = metadata.properties.get(propertyName);\r\n            if (propMetadata === undefined) {\r\n                const instanceRefId = InstanceUtils.getRefId(instance);\r\n                throw new Error(`Cannot create property editor for property \"${propertyName}\" as it does not exist on parent instance \"${instanceRefId}\"`);\r\n            }\r\n            return propMetadata;\r\n        }, [ instance, propertyName ]);\r\n    \r\n        const [ value, _setValue ] = useState<T>(InstanceUtils.unsafeGetProperty(instance, propertyName));    \r\n        const throttledValue = useThrottle(value, 150);\r\n    \r\n        useEffect(() => {\r\n            _setValue(InstanceUtils.unsafeGetProperty(instance, propertyName));\r\n\r\n            const propertyChangedSignal = instance.getPropertyChangedSignal(propertyName)!;\r\n            const propertyChangedConnection = propertyChangedSignal.connect(() => {\r\n                _setValue(InstanceUtils.unsafeGetProperty(instance, propertyName));\r\n            });\r\n    \r\n            return () => {\r\n                propertyChangedConnection.disconnect();\r\n            }\r\n        }, [ instance, propertyName ]);\r\n        \r\n        const [ hasFocus, setHasFocus ] = useState(false);\r\n    \r\n        const setValue = (newValue: T) => {\r\n            if (!propertyMetadata.hasAttribute('ReadOnly')) {\r\n                InstanceUtils.unsafeSetProperty(instance, propertyName, newValue);\r\n            }\r\n        };\r\n\r\n        return render({\r\n            instance,\r\n            propertyName,\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        });\r\n    };\r\n}\r\n\r\n//\r\n// Number Editor\r\n//\r\n\r\nexport const InstanceNumberPropertyEditor =\r\n    createInstancePropertyEditor<number>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Input\r\n                type='number'\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => {\r\n                    const newValue = Number.parseFloat(e.target.value);\r\n                    if (!Number.isNaN(newValue)) {\r\n                        setValue(newValue);\r\n                    }\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Boolean Editor\r\n//\r\n\r\nexport const InstanceBooleanPropertyEditor =\r\n    createInstancePropertyEditor<boolean>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Switch\r\n                size='small'\r\n                color='primary'\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                checked={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.checked)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// String Editor\r\n//\r\n\r\nexport const InstanceStringPropertyEditor =\r\n    createInstancePropertyEditor<string>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Color3 Editor\r\n//\r\n\r\nexport const InstanceColor3PropertyEditor =\r\n    createInstancePropertyEditor<Color3>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Input\r\n                type='color'\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value.toHex() : throttledValue.toHex()}\r\n                onChange={(e) => {\r\n                    const newColor = Color3.fromHex(e.target.value);\r\n                    if (newColor !== undefined) {\r\n                        setValue(newColor);\r\n                    }\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Vector3 Editor\r\n//\r\n\r\nexport const InstanceVector3PropertyEditor =\r\n    createInstancePropertyEditor<Vector3>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        // TODO: Add focus handling!\r\n\r\n        return (\r\n            <Vector3Input\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={throttledValue}\r\n                onChange={setValue}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Quaternion Editor\r\n//\r\n\r\nexport const InstanceQuaternionPropertyEditor =\r\n    createInstancePropertyEditor<Quaternion>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        // TODO: Add focus handling!\r\n\r\n        return (\r\n            <Vector3Input\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={Vector3.multiplyScalar(throttledValue.toEulerAngles(), MathEx.rad2deg)}\r\n                onChange={v => {\r\n                    const newValue = Quaternion.fromEulerAngles(\r\n                        v.x * MathEx.deg2rad,\r\n                        v.y * MathEx.deg2rad,\r\n                        v.z * MathEx.deg2rad\r\n                    );\r\n                    setValue(newValue);\r\n                }}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Content Editor\r\n//\r\n\r\nexport const InstanceContentPropertyEditor =\r\n    createInstancePropertyEditor<Content>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                error\r\n                helperText=\"Invalid content id\"\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}                \r\n                value={hasFocus ? value.toString() : throttledValue.toString()}\r\n                onChange={(e) => {\r\n                    const newValue = new Content(e.target.value);\r\n                    setValue(newValue);\r\n                }}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n                InputProps={{\r\n                    endAdornment:\r\n                        <InputAdornment position=\"end\">\r\n                            <ErrorIcon color=\"error\" />\r\n                        </InputAdornment>\r\n                }}\r\n            />\r\n        );\r\n    });\r\n\r\n//\r\n// Enum Editor\r\n//\r\n\r\nexport const InstanceEnumPropertyEditor =\r\n    createInstancePropertyEditor<string>((renderProps) => {\r\n        const {\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        return (\r\n            <Select\r\n                fullWidth\r\n                disabled={propertyMetadata.hasAttribute('ReadOnly')}\r\n                value={hasFocus ? value : throttledValue}\r\n                onChange={(e) => setValue(e.target.value as string)}\r\n                onFocus={() => setHasFocus(true)}\r\n                onBlur={() => setHasFocus(false)}\r\n            >\r\n                {\r\n                    Object.entries(propertyMetadata.type.enumValue!).map(([ enumKey, enumValue ]) => {\r\n                        return (\r\n                            <MenuItem key={enumKey} value={enumKey}>\r\n                                {enumValue}\r\n                            </MenuItem>\r\n                        );\r\n                    })                    \r\n                }\r\n            </Select>\r\n        );\r\n    });\r\n\r\n//\r\n// InstanceRef Editor\r\n//\r\n\r\nconst useInstanceRefPropertyEditorStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    instanceEditor: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport const InstanceInstanceRefPropertyEditor =\r\n    createInstancePropertyEditor<Instance | null>((renderProps) => {\r\n        const {\r\n            instance,\r\n            propertyMetadata,\r\n            value,\r\n            setValue,\r\n            throttledValue,\r\n            hasFocus,\r\n            setHasFocus\r\n        } = renderProps;\r\n\r\n        const classes = useInstanceRefPropertyEditorStyles();\r\n\r\n        const onDeleteButtonClick = () => {\r\n            if (propertyMetadata.name === 'parent') {\r\n                instance.destroy();\r\n                return;\r\n            }\r\n\r\n            setValue(null);\r\n        };\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.instanceEditor}>\r\n                    <InstanceLabel instance={value} />\r\n                </div>\r\n        \r\n                <IconButton size=\"small\" onClick={onDeleteButtonClick}>\r\n                    <ClearIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    });    \r\n\r\n//\r\n// General Property Editor\r\n//\r\n\r\nexport type InstancePropertyEditorProps = {\r\n    instance: Instance;\r\n    propertyName: string;\r\n};\r\n\r\nexport default function InstancePropertyEditor(props: InstancePropertyEditorProps) {\r\n    const { instance, propertyName } = props;\r\n\r\n    const propertyMetadata = useMemo(() => {\r\n        const metadata = getMetaData(instance);\r\n        const propMetadata = metadata.properties.get(propertyName);\r\n        if (propMetadata === undefined) {\r\n            const instanceRefId = InstanceUtils.getRefId(instance);\r\n            throw new Error(`Cannot create property editor for property \"${propertyName}\" as it does not exist on parent instance \"${instanceRefId}\"`);\r\n        }\r\n        return propMetadata;\r\n    }, [ instance, propertyName ]);\r\n    \r\n    if (propertyMetadata.type === PropertyType.number) {\r\n        return (\r\n            <InstanceNumberPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.boolean) {\r\n        return (\r\n            <InstanceBooleanPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.string) {\r\n        return (\r\n            <InstanceStringPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.color3) {\r\n        return (\r\n            <InstanceColor3PropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.vector3) {\r\n        return (\r\n            <InstanceVector3PropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.quaternion) {\r\n        return (\r\n            <InstanceQuaternionPropertyEditor \r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type === PropertyType.content) {\r\n        return (\r\n            <InstanceContentPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />\r\n        );\r\n    }\r\n\r\n    // TODO\r\n    if (propertyMetadata.type === PropertyType.material) {\r\n        return (\r\n            <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                style={{ textTransform: 'none' }}\r\n            >\r\n                Material\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type.isEnum) {\r\n        return (\r\n            <InstanceEnumPropertyEditor\r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />     \r\n        );\r\n    }\r\n\r\n    if (propertyMetadata.type.isInstanceRef) {\r\n        return (\r\n            <InstanceInstanceRefPropertyEditor             \r\n                instance={instance}\r\n                propertyName={propertyName}\r\n            />            \r\n        );\r\n    }\r\n\r\n    return null;\r\n}","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-vector3-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-quaternion-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-material-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-instance-ref-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-number-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-string-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-content-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-color3-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-cframe-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\serialization\\json\\properties\\json-boolean-serializer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\components\\_to-organise\\instance-explorer-item.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cut-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\hooks\\use-throttle.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\inputs\\vector3-input.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-label.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\instance-contexts\\local-client-instance-context.ts",["443","444","445","446","447","448"],"import BrowserContentProviderImpl from '../services/browser/browser-content-provider';\r\nimport BrowserLightingImpl from '../services/browser/browser-lighting-impl';\r\nimport BrowserMouseImpl from '../services/browser/browser-mouse-impl';\r\nimport BrowserRunServiceImpl from '../services/browser/browser-run-service-impl';\r\nimport BrowserWorldImpl from '../services/browser/browser-world-impl';\r\nimport ContentProvider from '../../engine/datamodel/services/content-provider';\r\nimport ContentProviderImpl from '../../engine/services/content-provider-impl';\r\nimport DataModel from '../../engine/datamodel/elements/datamodel';\r\nimport IInstanceContextWithCanvas from '../../client-shared/instance-contexts/instance-context-with-canvas';\r\nimport InstanceContext from '../../engine/datamodel/internals/instance-context';\r\nimport Lighting from '../../engine/datamodel/services/lighting';\r\nimport LightingImpl from '../../engine/services/lighting-impl';\r\nimport Mouse from '../../engine/datamodel/services/mouse';\r\nimport MouseImpl from '../../engine/services/mouse-impl';\r\nimport RenderCanvas from '../services/browser/graphics/render-canvas';\r\nimport RunService from '../../engine/datamodel/services/run-service';\r\nimport RunServiceImpl from '../../engine/services/run-service-impl';\r\nimport World from '../../engine/datamodel/services/world';\r\nimport WorldImpl from '../../engine/services/world-impl';\r\nimport { Container } from 'inversify';\r\nimport { WorkerThread } from '../../engine/threading/contexts/main-thread/worker-thread';\r\n\r\nexport default class LocalClientInstanceContext extends InstanceContext implements IInstanceContextWithCanvas\r\n{\r\n    private _renderCanvas: RenderCanvas;\r\n    private _clientScriptWorkerThread: WorkerThread;\r\n\r\n    //\r\n    // Constructor\r\n    //\r\n\r\n    constructor() {\r\n        super();\r\n        this.finishConstruction();\r\n\r\n        this._renderCanvas = this.getServiceImpl<RenderCanvas>('RenderCanvas');\r\n\r\n        this._clientScriptWorkerThread = new WorkerThread(\r\n            this, \r\n            new Worker(\r\n                '../worker-threads/client-script-thread-worker',\r\n                { \r\n                    name: 'work',\r\n                    type: 'module'\r\n                }));\r\n    }\r\n\r\n    //\r\n    // Properties\r\n    //\r\n\r\n    public get canvas(): HTMLCanvasElement | null {\r\n        return this._renderCanvas.canvas;\r\n    }\r\n    public set canvas(newCanvas: HTMLCanvasElement | null) {\r\n        this._renderCanvas.canvas = newCanvas;\r\n    }\r\n\r\n    //\r\n    // Methods\r\n    //\r\n\r\n    protected onDestroy(): void {\r\n        super.onDestroy();\r\n        this._clientScriptWorkerThread.destroy();\r\n    }\r\n\r\n    protected setupContainer(container: Container): void {\r\n        container.bind('RenderCanvas').to(RenderCanvas).inSingletonScope();\r\n        \r\n        container.bind('BrowserWorldImpl').to(BrowserWorldImpl).inSingletonScope();\r\n        container.bind(WorldImpl).toService('BrowserWorldImpl');\r\n\r\n        container.bind('BrowserContentProviderImpl').to(BrowserContentProviderImpl).inSingletonScope();\r\n        container.bind(ContentProviderImpl).toService('BrowserContentProviderImpl');\r\n\r\n        container.bind('BrowserLightingImpl').to(BrowserLightingImpl).inSingletonScope();\r\n        container.bind(LightingImpl).toService('BrowserLightingImpl');\r\n\r\n        // TODO: client replicator\r\n\r\n        container.bind('BrowserMouseImpl').to(BrowserMouseImpl).inSingletonScope();\r\n        container.bind(MouseImpl).toService('BrowserMouseImpl');\r\n\r\n        container.bind('BrowserRunServiceImpl').to(BrowserRunServiceImpl).inSingletonScope();\r\n        container.bind(RunServiceImpl).toService('BrowserRunServiceImpl');\r\n    }\r\n}\r\n","C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\datamodel\\internals\\instance-context.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\instances\\instance-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-mouse-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-content-provider.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-world-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-run-service-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\render-canvas.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\browser-lighting-impl.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\worker-thread.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\primitive-renderer.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\sky-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\perspective-camera-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\proxies\\point-light-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\inter-thread-communication.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-mouse-impl-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\engine\\threading\\contexts\\main-thread\\proxies\\worker-run-service-impl-proxy.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\open-folder-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\editor\\core\\components\\icons\\cube-icon.tsx",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\objects\\dynamic-instanced-mesh.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\services\\browser\\graphics\\converters\\cframe-converter.ts",[],"C:\\Users\\Matthew\\Desktop\\OpenWorldWeb\\openworld\\src\\openworld\\client\\worker-threads\\client-script-thread-worker.ts",[],["449","450"],{"ruleId":"451","replacedBy":"452"},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":1,"column":8,"nodeType":"457","messageId":"458","endLine":1,"endColumn":13},{"ruleId":"459","severity":1,"message":"460","line":15,"column":8,"nodeType":"461","endLine":15,"endColumn":10,"suggestions":"462"},{"ruleId":"455","severity":1,"message":"463","line":2,"column":8,"nodeType":"457","messageId":"458","endLine":2,"endColumn":23},{"ruleId":"455","severity":1,"message":"464","line":26,"column":5,"nodeType":"457","messageId":"458","endLine":26,"endColumn":18},{"ruleId":"455","severity":1,"message":"465","line":28,"column":5,"nodeType":"457","messageId":"458","endLine":28,"endColumn":13},{"ruleId":"455","severity":1,"message":"466","line":31,"column":5,"nodeType":"457","messageId":"458","endLine":31,"endColumn":12},{"ruleId":"455","severity":1,"message":"467","line":234,"column":13,"nodeType":"457","messageId":"458","endLine":234,"endColumn":18},{"ruleId":"455","severity":1,"message":"468","line":237,"column":13,"nodeType":"457","messageId":"458","endLine":237,"endColumn":21},{"ruleId":"455","severity":1,"message":"469","line":238,"column":13,"nodeType":"457","messageId":"458","endLine":238,"endColumn":24},{"ruleId":"455","severity":1,"message":"467","line":260,"column":13,"nodeType":"457","messageId":"458","endLine":260,"endColumn":18},{"ruleId":"455","severity":1,"message":"468","line":263,"column":13,"nodeType":"457","messageId":"458","endLine":263,"endColumn":21},{"ruleId":"455","severity":1,"message":"469","line":264,"column":13,"nodeType":"457","messageId":"458","endLine":264,"endColumn":24},{"ruleId":"455","severity":1,"message":"470","line":382,"column":13,"nodeType":"457","messageId":"458","endLine":382,"endColumn":27},{"ruleId":"455","severity":1,"message":"468","line":383,"column":13,"nodeType":"457","messageId":"458","endLine":383,"endColumn":21},{"ruleId":"455","severity":1,"message":"469","line":384,"column":13,"nodeType":"457","messageId":"458","endLine":384,"endColumn":24},{"ruleId":"455","severity":1,"message":"471","line":6,"column":8,"nodeType":"457","messageId":"458","endLine":6,"endColumn":23},{"ruleId":"455","severity":1,"message":"472","line":8,"column":8,"nodeType":"457","messageId":"458","endLine":8,"endColumn":17},{"ruleId":"455","severity":1,"message":"473","line":11,"column":8,"nodeType":"457","messageId":"458","endLine":11,"endColumn":16},{"ruleId":"455","severity":1,"message":"474","line":13,"column":8,"nodeType":"457","messageId":"458","endLine":13,"endColumn":13},{"ruleId":"455","severity":1,"message":"475","line":16,"column":8,"nodeType":"457","messageId":"458","endLine":16,"endColumn":18},{"ruleId":"455","severity":1,"message":"476","line":18,"column":8,"nodeType":"457","messageId":"458","endLine":18,"endColumn":13},{"ruleId":"451","replacedBy":"477"},{"ruleId":"453","replacedBy":"478"},"no-native-reassign",["479"],"no-negated-in-lhs",["480"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'instanceContext'. Either include it or remove the dependency array.","ArrayExpression",["481"],"'InstanceContext' is defined but never used.","'MenuItemProps' is defined but never used.","'ListItem' is defined but never used.","'Tooltip' is defined but never used.","'value' is assigned a value but never used.","'hasFocus' is assigned a value but never used.","'setHasFocus' is assigned a value but never used.","'throttledValue' is assigned a value but never used.","'ContentProvider' is defined but never used.","'DataModel' is defined but never used.","'Lighting' is defined but never used.","'Mouse' is defined but never used.","'RunService' is defined but never used.","'World' is defined but never used.",["479"],["480"],"no-global-assign","no-unsafe-negation",{"desc":"482","fix":"483"},"Update the dependencies array to be: [instanceContext]",{"range":"484","text":"485"},[503,505],"[instanceContext]"]